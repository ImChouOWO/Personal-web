import type { SvgClass, PointObject, PathAttributes, SelectIndex, EditSvgObject, FixedType } from '../types';
export declare class EditSvg {
    svg: SvgClass;
    private pathSelector;
    constructor(svg: SvgClass);
    /** Return true when some path selected. */
    get selected(): boolean;
    /** Select path index. */
    select(index: SelectIndex, multipleSelect?: boolean): void;
    /** Clear selected status. */
    cancel(): void;
    /** Change attributes of selected path. */
    changeAttributes(attrs: PathAttributes): void;
    /** Translate position of selected path. */
    translate(move: PointObject): void;
    /** Scale the selected path. */
    scale(r: number): void;
    /** Scale the selected path horizontally. */
    scaleX(r: number): void;
    /** Scale the selected path vertically. */
    scaleY(r: number): void;
    /** Resize based on the bounding box vertices */
    resizeBoundingBox(type: FixedType, po: PointObject): void;
    /**
     * Delete the selected path.
     *
     * @todo Implements to delete points.
     */
    delete(): void;
    /** Clone an EditSvg class object for preview. */
    preview(): EditSvg;
    /** Return data in json format. */
    toJson(): EditSvgObject | null;
    private get paths();
    private exec;
}
