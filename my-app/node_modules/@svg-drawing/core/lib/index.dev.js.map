{"version":3,"file":"index.dev.js","sources":["../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../src/drawing/drawing.ts","../src/svg/point.ts","../src/utils.ts","../src/svg/command.ts","../src/svg/vector.ts","../src/drawing/convert.ts","../src/svg/path.ts","../src/drawing/factory.ts","../src/event.ts","../src/throttle.ts","../src/drawing/eventHandler.ts","../src/svg/svg.ts","../src/edit/segment.ts","../src/edit/boundingBox.ts","../src/edit/editPath.ts","../src/edit/pathSelector.ts","../src/edit/editSvg.ts","../src/edit/editing.ts","../src/edit/resizePathHandler.ts","../src/edit/translatePathHandler.ts","../src/renderer.ts","../src/download.ts","../src/resize.ts","../src/parser.ts","../src/SvgDrawing.ts","../src/animation/animation.ts","../src/SvgAnimation.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import type { DrawingClass } from '..'\nimport type { EventPoint, DrawFactory, PathClass, SvgClass } from '../types'\n\n/**\n * ### Basic Drawing usage.\n *\n * ```ts\n * import {\n *   Svg,\n *   Drawing,\n *   PenHandler,\n *   Renderer,\n *   BasicDrawFactory,\n * } from '@svg-drawing/core'\n *\n * const el = document.getElementById('draw')\n * const { width, height } = el.getBoundingClientRect()\n *\n * new Drawing(\n *   new Svg({ width, height }),\n *   new BasicDrawFactory({ stroke: '#000' }),\n *   new PenHandler(el),\n *   new Renderer(el).update\n * )\n * ```\n */\nexport class Drawing implements DrawingClass {\n  private _drawPath: PathClass | null\n  private _drawPoints: EventPoint[]\n  constructor(\n    public svg: SvgClass,\n    public pathFactory: DrawFactory,\n    private update: (svg: SvgClass) => void\n  ) {\n    /** Setup property */\n    this._drawPath = null\n    this._drawPoints = []\n\n    /** Setup EventDrawHandler */\n    this.start = this.start.bind(this)\n    this.dot = this.dot.bind(this)\n    this.end = this.end.bind(this)\n  }\n\n  public start(): void {\n    this._drawPoints = []\n    this._drawPath = this.pathFactory.createPath()\n    this.svg.addPath(this._drawPath)\n  }\n\n  public dot(po: EventPoint): void {\n    if (!this._drawPath) return\n\n    this._drawPoints.push(po)\n    this._drawPath.updateCommands(\n      this.pathFactory.createCommand(this._drawPoints)\n    )\n\n    this.update(this.svg)\n  }\n\n  public end(): void {\n    this._drawPath = null\n    this.update(this.svg)\n  }\n}\n","import type { VectorObject, PointClass, PointObject } from '../types'\n\n/**\n * Maximum number of decimal places is 5\n *\n * @todo Changeable parameter\n */\nconst coeffecient = 100000\nconst roundNumber = (num: number) => Math.round(num * coeffecient) / coeffecient\n\nexport class Point implements PointClass {\n  private _x: number\n  private _y: number\n  constructor(x: number, y: number) {\n    this._x = roundNumber(x)\n    this._y = roundNumber(y)\n  }\n\n  public get x() {\n    return this._x\n  }\n\n  public get y() {\n    return this._y\n  }\n\n  public scale(r: number) {\n    return new Point(this._x * r, this._y * r)\n  }\n\n  public scaleX(r: number) {\n    return new Point(this._x * r, this._y)\n  }\n\n  public scaleY(r: number) {\n    return new Point(this._x, this._y * r)\n  }\n\n  public add(p: PointObject) {\n    return new Point(this._x + p.x, this._y + p.y)\n  }\n\n  public sub(p: PointObject) {\n    return new Point(this._x - p.x, this._y - p.y)\n  }\n\n  public clone() {\n    return new Point(this._x, this._y)\n  }\n\n  public toJson() {\n    return {\n      x: this._x,\n      y: this._y,\n    }\n  }\n\n  /**\n   * ### Calculate coordinate from vector.\n   *\n   * ```ts\n   * const point = Point.fromVector({ value: 1, 0 })\n   *\n   * console.log(point.x) // 0\n   * console.log(point.y) // 1\n   * ```\n   */\n  public static fromVector({ value, angle }: VectorObject): Point {\n    const theta = (angle * Math.PI) / 180\n    return new Point(Math.cos(theta) * value, Math.sin(theta) * value)\n  }\n}\n","export const camel2kebab = (str: string): string =>\n  str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n\nexport const roundUp = (num: number, digits = 2): number => +num.toFixed(digits)\n\nexport const kebab2camel = (str: string): string =>\n  str.replace(/-([a-z])/g, (a: string, b: string) => b.toUpperCase())\n\nexport const isAlmostSameNumber = (a: number, b: number) =>\n  Math.trunc(a) === Math.trunc(b)\n\nexport const isNaN = (num: number) => num !== num\n","import { Point } from './point'\nimport { roundUp } from '../utils'\nimport type {\n  CommandClass,\n  CommandType,\n  OtherCommandType,\n  PointObject,\n  PointClass,\n  AbsoluteCommandType,\n  RelativeCommandType,\n} from '../types'\n\n/** @deprecated */\nexport class OtherCommand<T extends OtherCommandType>\n  implements CommandClass<OtherCommandType>\n{\n  static Types = {\n    /**\n     * Horizontal\n     *\n     * `H 10`\n     */\n    H: 'H',\n    /**\n     * Horizontal relative\n     *\n     * `h 10`\n     */\n    h: 'h',\n    /**\n     * Vertical\n     *\n     * V 10\n     */\n    V: 'V',\n    /**\n     * Vertical relative\n     *\n     * `v 10`\n     */\n    v: 'v',\n    /**\n     * Arc curve\n     *\n     * `A 6 4 10 0 1 14 10`\n     */\n    A: 'A',\n    /**\n     * Arc curve relative\n     *\n     * `a 6 4 10 0 1 14 10`\n     */\n    a: 'a',\n  } as const\n\n  constructor(public type: T, public values: number[] = []) {}\n\n  public set points(p: PointClass[]) {\n    if (!p) return\n    this.values = p.reduce((acc: number[], p) => [...acc, p.x, p.y], [])\n  }\n\n  public get points() {\n    return this.values.reduce(\n      (acc: Point[], _, i: number) =>\n        i % 2 ? acc : [...acc, new Point(this.values[i - 1], this.values[i])],\n      []\n    )\n  }\n\n  public get point() {\n    return undefined\n  }\n\n  public toString() {\n    return `${this.type}${this.values.map((v) => roundUp(v)).join(' ')}`\n  }\n\n  public scale(r: number) {\n    const upd = new OtherCommand(\n      this.type,\n      this.values.map((p) => p * r)\n    )\n    return upd\n  }\n\n  public scaleX(r: number) {\n    return new OtherCommand(\n      this.type,\n      this.points.reduce((res: number[], po: PointClass) => {\n        const upd = po.scale(r)\n        return [...res, upd.x, upd.y]\n      }, [])\n    )\n  }\n\n  public scaleY(r: number) {\n    return new OtherCommand(\n      this.type,\n      this.points.reduce((res: number[], po: PointClass) => {\n        const upd = po.scaleY(r)\n        return [...res, upd.x, upd.y]\n      }, [])\n    )\n  }\n\n  public clone() {\n    return new OtherCommand(this.type, this.values.slice())\n  }\n\n  public translate(p: PointObject) {\n    if (OtherCommand.Types.a === this.type) return this\n    this.points = this.points.map((po) => po.add(p))\n    return this\n  }\n\n  public static validTypes(t: any): t is OtherCommandType {\n    return Object.values(OtherCommand.Types).some((arg) => arg === t)\n  }\n}\n\n/**\n * Move relative\n *\n * `m 0 0`\n */\nexport class RelativeMove implements CommandClass<'m'> {\n  public readonly type = 'm'\n  public readonly relative = false\n  public points: [PointClass]\n  constructor(point: PointClass) {\n    this.points = [point]\n  }\n\n  public get values() {\n    return this.points.reduce((acc: number[], po) => [...acc, po.x, po.y], [])\n  }\n\n  public get point() {\n    return this.points[0]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new RelativeMove(this.point.add(p))\n  }\n\n  public scale(r: number) {\n    return new RelativeMove(this.point.scale(r))\n  }\n\n  public scaleX(r: number) {\n    return new RelativeMove(this.point.scaleX(r))\n  }\n\n  public scaleY(r: number) {\n    return new RelativeMove(this.point.scaleY(r))\n  }\n\n  public clone() {\n    return new RelativeMove(this.point.clone())\n  }\n}\n\n/**\n * Move\n *\n * `M 0 0`\n */\nexport class Move implements CommandClass<'M'> {\n  public readonly type = 'M'\n  public points: [PointClass]\n  constructor(point: PointClass) {\n    this.points = [point]\n  }\n\n  public get values() {\n    return this.points.reduce((acc: number[], po) => [...acc, po.x, po.y], [])\n  }\n\n  public get point() {\n    return this.points[0]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new Move(this.point.add(p))\n  }\n\n  public scale(r: number) {\n    return new Move(this.point.scale(r))\n  }\n\n  public scaleX(r: number) {\n    return new Move(this.point.scaleX(r))\n  }\n\n  public scaleY(r: number) {\n    return new Move(this.point.scaleY(r))\n  }\n\n  public clone() {\n    return new Move(this.point.clone())\n  }\n}\n\n/**\n * Line relative\n *\n * `l 0 0`\n */\nexport class RelativeLine implements CommandClass<'l'> {\n  public readonly type = 'l'\n  public points: [PointClass]\n  constructor(point: PointClass) {\n    this.points = [point]\n  }\n\n  public get values() {\n    return this.points.reduce((acc: number[], po) => [...acc, po.x, po.y], [])\n  }\n\n  public get point() {\n    return this.points[0]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new RelativeLine(this.point.add(p))\n  }\n\n  public scale(r: number) {\n    return new RelativeLine(this.point.scale(r))\n  }\n\n  public scaleX(r: number) {\n    return new RelativeLine(this.point.scaleX(r))\n  }\n\n  public scaleY(r: number) {\n    return new RelativeLine(this.point.scaleY(r))\n  }\n\n  public clone() {\n    return new RelativeLine(this.point.clone())\n  }\n}\n\n/**\n * Line\n *\n * `L 0 0`\n */\nexport class Line implements CommandClass<'L'> {\n  public readonly type = 'L'\n  public points: [PointClass]\n  constructor(point: PointClass) {\n    this.points = [point]\n  }\n\n  public get values(): number[] {\n    return this.points.reduce((acc: number[], po) => [...acc, po.x, po.y], [])\n  }\n\n  public get point() {\n    return this.points[0]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new Line(this.point.add(p))\n  }\n\n  public scale(r: number) {\n    return new Line(this.point.scale(r))\n  }\n\n  public scaleX(r: number) {\n    return new Line(this.point.scaleX(r))\n  }\n\n  public scaleY(r: number) {\n    return new Line(this.point.scaleY(r))\n  }\n\n  public clone() {\n    return new Line(this.point.clone())\n  }\n}\n\n/**\n * Cubic bezier curve relative\n *\n * `c 1 1 2 2 3 3`\n */\nexport class RelativeCurve implements CommandClass<'c'> {\n  public readonly type = 'c'\n  constructor(public points: [PointClass, PointClass, PointClass]) {}\n\n  public get values() {\n    return this.points.reduce((acc: number[], po) => [...acc, po.x, po.y], [])\n  }\n\n  public get point() {\n    return this.points[2]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new RelativeCurve(\n      this.points.map((po) => po.add(p)) as [PointClass, PointClass, PointClass]\n    )\n  }\n\n  public scale(r: number) {\n    return new RelativeCurve(\n      this.points.map((p) => p.scale(r)) as [PointClass, PointClass, PointClass]\n    )\n  }\n\n  public scaleX(r: number) {\n    return new RelativeCurve(\n      this.points.map((p) => p.scaleX(r)) as [\n        PointClass,\n        PointClass,\n        PointClass\n      ]\n    )\n  }\n\n  public scaleY(r: number) {\n    return new RelativeCurve(\n      this.points.map((p) => p.scaleY(r)) as [\n        PointClass,\n        PointClass,\n        PointClass\n      ]\n    )\n  }\n\n  public clone() {\n    return new RelativeCurve(\n      this.points.map((po) => po.clone()) as [\n        PointClass,\n        PointClass,\n        PointClass\n      ]\n    )\n  }\n}\n\n/**\n * Cubic bezier curve\n *\n * `C 1 1 2 2 3 3`\n */\nexport class Curve implements CommandClass<'C'> {\n  public readonly type = 'C'\n  constructor(public points: [PointClass, PointClass, PointClass]) {}\n\n  public get values(): [number, number, number, number, number, number] {\n    return this.points.reduce(\n      (acc: number[], po) => [...acc, po.x, po.y],\n      []\n    ) as [number, number, number, number, number, number]\n  }\n\n  public get point() {\n    return this.points[2]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new Curve(\n      this.points.map((po) => po.add(p)) as [PointClass, PointClass, PointClass]\n    )\n  }\n\n  public scale(r: number) {\n    return new Curve(\n      this.points.map((p) => p.scale(r)) as [PointClass, PointClass, PointClass]\n    )\n  }\n\n  public scaleX(r: number) {\n    return new Curve(\n      this.points.map((p) => p.scaleX(r)) as [\n        PointClass,\n        PointClass,\n        PointClass\n      ]\n    )\n  }\n\n  public scaleY(r: number) {\n    return new Curve(\n      this.points.map((p) => p.scaleY(r)) as [\n        PointClass,\n        PointClass,\n        PointClass\n      ]\n    )\n  }\n\n  public clone() {\n    return new Curve(\n      this.points.map((p) => p.clone()) as [PointClass, PointClass, PointClass]\n    )\n  }\n}\n\n/**\n * Shortcut curve\n *\n * `S 10 60 10 30`\n */\nexport class ShortcutCurve implements CommandClass<'S'> {\n  public readonly type = 'S'\n  constructor(public points: [PointClass, PointClass]) {}\n\n  public get values(): [number, number, number, number] {\n    return this.points.reduce(\n      (acc: number[], po) => [...acc, po.x, po.y],\n      []\n    ) as [number, number, number, number]\n  }\n\n  public get point() {\n    return this.points[1]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new ShortcutCurve(\n      this.points.map((po) => po.add(p)) as [PointClass, PointClass]\n    )\n  }\n\n  public scale(r: number) {\n    return new ShortcutCurve(\n      this.points.map((p) => p.scale(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleX(r: number) {\n    return new ShortcutCurve(\n      this.points.map((p) => p.scaleX(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleY(r: number) {\n    return new ShortcutCurve(\n      this.points.map((p) => p.scaleY(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public clone() {\n    return new ShortcutCurve(\n      this.points.map((p) => p.clone()) as [PointClass, PointClass]\n    )\n  }\n}\n\n/**\n * Shortcut curve relative\n *\n * `s 10 60 10 30`\n */\nexport class RelativeShortcutCurve implements CommandClass<'s'> {\n  public readonly type = 's'\n  constructor(public points: [PointClass, PointClass]) {}\n\n  public get values(): [number, number, number, number] {\n    return this.points.reduce(\n      (acc: number[], po) => [...acc, po.x, po.y],\n      []\n    ) as [number, number, number, number]\n  }\n\n  public get point() {\n    return this.points[1]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new RelativeShortcutCurve(\n      this.points.map((po) => po.add(p)) as [PointClass, PointClass]\n    )\n  }\n\n  public scale(r: number) {\n    return new RelativeShortcutCurve(\n      this.points.map((p) => p.scaleX(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleX(r: number) {\n    return new RelativeShortcutCurve(\n      this.points.map((p) => p.scaleX(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleY(r: number) {\n    return new RelativeShortcutCurve(\n      this.points.map((p) => p.scaleY(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public clone() {\n    return new RelativeShortcutCurve(\n      this.points.map((po) => po.clone()) as [PointClass, PointClass]\n    )\n  }\n}\n\n/**\n * Quadratic curve\n *\n * Q 10 60 10 30\n */\n\nexport class QuadraticCurve implements CommandClass<'Q'> {\n  public readonly type = 'Q'\n  constructor(public points: [PointClass, PointClass]) {}\n\n  public get values(): [number, number, number, number] {\n    return this.points.reduce(\n      (acc: number[], po) => [...acc, po.x, po.y],\n      []\n    ) as [number, number, number, number]\n  }\n\n  public get point() {\n    return this.points[1]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new QuadraticCurve(\n      this.points.map((po) => po.add(p)) as [PointClass, PointClass]\n    )\n  }\n\n  public scale(r: number) {\n    return new QuadraticCurve(\n      this.points.map((p) => p.scale(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleX(r: number) {\n    return new QuadraticCurve(\n      this.points.map((p) => p.scaleX(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleY(r: number) {\n    return new QuadraticCurve(\n      this.points.map((p) => p.scaleY(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public clone() {\n    return new QuadraticCurve(\n      this.points.map((p) => p.clone()) as [PointClass, PointClass]\n    )\n  }\n}\n\n/**\n * Quadratic curve relative\n *\n * `q 10 60 10 30`\n */\nexport class RelativeQuadraticCurve implements CommandClass<'q'> {\n  public readonly type = 'q'\n  constructor(public points: [PointClass, PointClass]) {}\n\n  public get values(): [number, number, number, number] {\n    return this.points.reduce(\n      (acc: number[], po) => [...acc, po.x, po.y],\n      []\n    ) as [number, number, number, number]\n  }\n\n  public get point() {\n    return this.points[1]\n  }\n\n  public toString() {\n    return `${this.type}${this.values.join(' ')}`\n  }\n\n  public translate(p: PointObject) {\n    return new RelativeQuadraticCurve(\n      this.points.map((po) => po.add(p)) as [PointClass, PointClass]\n    )\n  }\n\n  public scale(r: number) {\n    return new RelativeQuadraticCurve(\n      this.points.map((p) => p.scaleX(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleX(r: number) {\n    return new RelativeQuadraticCurve(\n      this.points.map((p) => p.scaleX(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public scaleY(r: number) {\n    return new RelativeQuadraticCurve(\n      this.points.map((p) => p.scaleY(r)) as [PointClass, PointClass]\n    )\n  }\n\n  public clone() {\n    return new RelativeQuadraticCurve(\n      this.points.map((po) => po.clone()) as [PointClass, PointClass]\n    )\n  }\n}\n\n/**\n * Close\n *\n * 'z'\n */\nexport class Close implements CommandClass<'z'> {\n  public readonly type = 'z'\n\n  public get values(): [] {\n    return []\n  }\n\n  public get points(): [] {\n    return []\n  }\n\n  public get point() {\n    return undefined\n  }\n\n  public toString() {\n    return `${this.type}`\n  }\n\n  public translate(_p: PointObject) {\n    return new Close()\n  }\n\n  public scale(_r: number) {\n    return new Close()\n  }\n\n  public scaleX(r: number) {\n    return new Close()\n  }\n\n  public scaleY(r: number) {\n    return new Close()\n  }\n\n  public clone() {\n    return new Close()\n  }\n}\n\nexport const createCommand = (\n  type: CommandType,\n  values: number[] = []\n): CommandClass => {\n  switch (type) {\n    case 'M': {\n      return new Move(new Point(values[0], values[1]))\n    }\n    case 'm': {\n      return new RelativeMove(new Point(values[0], values[1]))\n    }\n    case 'L': {\n      return new Line(new Point(values[0], values[1]))\n    }\n    case 'l': {\n      return new RelativeLine(new Point(values[0], values[1]))\n    }\n    case 'C': {\n      return new Curve([\n        new Point(values[0], values[1]),\n        new Point(values[2], values[3]),\n        new Point(values[4], values[5]),\n      ])\n    }\n    case 'c': {\n      return new RelativeCurve([\n        new Point(values[0], values[1]),\n        new Point(values[2], values[3]),\n        new Point(values[4], values[5]),\n      ])\n    }\n    case 'Q': {\n      return new QuadraticCurve([\n        new Point(values[0], values[1]),\n        new Point(values[2], values[3]),\n      ])\n    }\n    case 'q': {\n      return new RelativeQuadraticCurve([\n        new Point(values[0], values[1]),\n        new Point(values[2], values[3]),\n      ])\n    }\n    case 'S': {\n      return new ShortcutCurve([\n        new Point(values[0], values[1]),\n        new Point(values[2], values[3]),\n      ])\n    }\n    case 's': {\n      return new RelativeShortcutCurve([\n        new Point(values[0], values[1]),\n        new Point(values[2], values[3]),\n      ])\n    }\n    case 'Z':\n    case 'z': {\n      return new Close()\n    }\n\n    default: {\n      return new OtherCommand(type, values)\n    }\n  }\n}\n\nexport const isAbsoluteCommand = (\n  command: CommandClass\n): command is CommandClass<AbsoluteCommandType> =>\n  ['M', 'L', 'C', 'Q', 'S'].includes(command.type)\n\nexport const isRelativeCommand = (\n  command: CommandClass\n): command is CommandClass<RelativeCommandType> =>\n  ['m', 'l', 'c', 'q', 's'].includes(command.type)\n\nexport const isCurveCommand = (\n  command: CommandClass\n): command is CommandClass<'C' | 'c'> => ['c', 'C'].includes(command.type)\n\nexport const isOtherCommand = (\n  command: CommandClass\n): command is CommandClass<OtherCommandType> =>\n  ['h', 'H', 'v', 'V', 'a', 'A', 'z', 'Z'].includes(command.type)\n\nexport const toRelativeCommand = (\n  command: CommandClass<AbsoluteCommandType>,\n  basePoint: PointObject\n): CommandClass<RelativeCommandType> => {\n  switch (command.type) {\n    case 'M':\n      return new RelativeMove(command.point.sub(basePoint))\n    case 'L':\n      return new RelativeLine(command.point.sub(basePoint))\n    case 'C':\n      return new RelativeCurve(\n        command.points.map((p) => p.sub(basePoint)) as [\n          PointClass,\n          PointClass,\n          PointClass\n        ]\n      )\n    case 'Q':\n      return new RelativeQuadraticCurve(\n        command.points.map((p) => p.sub(basePoint)) as [PointClass, PointClass]\n      )\n    case 'S':\n      return new RelativeShortcutCurve(\n        command.points.map((p) => p.sub(basePoint)) as [PointClass, PointClass]\n      )\n    default:\n      throw new Error('toRelativeCommand error')\n  }\n}\n\nexport const toAbsoluteCommand = (\n  command: CommandClass<RelativeCommandType>,\n  basePoint: PointObject\n): CommandClass<AbsoluteCommandType> => {\n  switch (command.type) {\n    case 'm':\n      return new Move(command.point.add(basePoint))\n    case 'l':\n      return new Line(command.point.add(basePoint))\n    case 'c':\n      return new Curve(\n        command.points.map((p) => p.add(basePoint)) as [\n          PointClass,\n          PointClass,\n          PointClass\n        ]\n      )\n    case 'q':\n      return new QuadraticCurve(\n        command.points.map((p) => p.add(basePoint)) as [PointClass, PointClass]\n      )\n    case 's':\n      return new ShortcutCurve(\n        command.points.map((p) => p.add(basePoint)) as [PointClass, PointClass]\n      )\n    default:\n      throw new Error('toAbsoluteCommand error')\n  }\n}\n\nexport const toRelativeCommands = (\n  commands: CommandClass[]\n): CommandClass[] => {\n  if (commands.length === 0) return []\n\n  let basePoint = commands[0].point\n  const upd = [commands[0]]\n\n  for (let i = 1; i < commands.length; i += 1) {\n    const command = commands[i]\n\n    const notAbsoluteCommand =\n      basePoint && isAbsoluteCommand(command)\n        ? toRelativeCommand(command, basePoint)\n        : command.clone()\n\n    basePoint = isAbsoluteCommand(command)\n      ? command.point // Absolute point\n      : basePoint && command.point\n      ? basePoint.add(command.point) // Relative point\n      : undefined // Close\n\n    upd.push(notAbsoluteCommand)\n  }\n\n  return upd\n}\n\nexport const toAbsoluteCommands = (\n  commands: CommandClass[]\n): CommandClass[] => {\n  if (commands.length === 0) return []\n\n  let basePoint = commands[0].point\n  const upd = [commands[0]]\n\n  for (let i = 1; i < commands.length; i += 1) {\n    const command = commands[i]\n\n    const notRelativeCommand =\n      basePoint && isRelativeCommand(command)\n        ? toAbsoluteCommand(command, basePoint)\n        : command.clone()\n\n    basePoint = isAbsoluteCommand(command)\n      ? command.point // Absolute point\n      : basePoint && command.point\n      ? basePoint.add(command.point) // Relative point\n      : undefined // Close\n\n    upd.push(notRelativeCommand)\n  }\n\n  return upd\n}\n","import type { VectorClass, PointObject } from '../types'\n\nexport class Vector implements VectorClass {\n  constructor(public readonly value: number, public readonly angle: number) {}\n\n  scale(r: number) {\n    return new Vector(this.value * r, this.angle)\n  }\n\n  rotate(a: number) {\n    return new Vector(this.value, this.angle + a)\n  }\n\n  toJson() {\n    return {\n      value: this.value,\n      angle: this.angle,\n    }\n  }\n\n  /**\n   * ### Calculate angle and absolute value from origin of coordinates\n   *\n   * ```ts\n   * const vector = Vector.fromPoint({ x: 1, y: 1 })\n   *\n   * console.log(vector.angle) // 45\n   * console.log(vector.value) // 1.4142135623730951\n   * ```\n   */\n  public static fromPoint({ x, y }: PointObject): Vector {\n    return new Vector(\n      Math.sqrt(Math.pow(x, 2.0) + Math.pow(y, 2.0)),\n      Math.atan2(y, x) * (180 / Math.PI)\n    )\n  }\n}\n","import { Move, Line, Curve, Close } from '../svg/command'\nimport { Point } from '../svg/point'\nimport { Vector } from '../svg/vector'\nimport type {\n  EventPoint,\n  CommandClass,\n  PointObject,\n  ConvertOption,\n  CreateCommand,\n} from '../types'\n\nexport const createLineCommands: CreateCommand = (points) =>\n  points.map((p, i) =>\n    i === 0 ? new Move(new Point(p.x, p.y)) : new Line(new Point(p.x, p.y))\n  )\n\ninterface GenerateCommandsConverter {\n  create: CreateCommand\n}\n\nexport class BezierCurve implements GenerateCommandsConverter {\n  public ratio: number\n  constructor({ ratio }: ConvertOption = {}) {\n    this.ratio = ratio ?? 0.4\n    this.create = this.create.bind(this)\n  }\n\n  public genCommand(\n    p1: PointObject,\n    p2: PointObject,\n    p3: PointObject,\n    p4: PointObject\n  ): CommandClass {\n    const value = Vector.fromPoint(\n      new Point(p3.x, p3.y).sub(new Point(p2.x, p2.y))\n    ).scale(this.ratio).value\n\n    const vPrev = Point.fromVector({\n      angle: Vector.fromPoint(new Point(p3.x, p3.y).sub(new Point(p1.x, p1.y)))\n        .angle,\n      value,\n    })\n    const vNext = Point.fromVector({\n      angle: Vector.fromPoint(new Point(p2.x, p2.y).sub(new Point(p4.x, p4.y)))\n        .angle,\n      value,\n    })\n\n    const cPrev = new Point(p2.x, p2.y).add(vPrev)\n    const cNext = new Point(p3.x, p3.y).add(vNext)\n    return new Curve([cPrev, cNext, new Point(p3.x, p3.y)])\n  }\n\n  public create(p: EventPoint[]): CommandClass[] {\n    const commands: CommandClass[] = []\n    if (p.length < 3) {\n      return createLineCommands(p)\n    }\n    for (let i = 0; i < p.length; i += 1) {\n      if (i === 0) {\n        commands.push(new Move(new Point(p[i].x, p[i].y)))\n        continue\n      }\n      commands.push(\n        this.genCommand(\n          p[i - 2 < 0 ? 0 : i - 2],\n          p[i - 1],\n          p[i],\n          i < p.length - 1 ? p[i + 1] : p[i]\n        )\n      )\n    }\n    return commands\n  }\n}\n\nexport const closeCommands = (commands: CommandClass[]): CommandClass[] => [\n  ...commands,\n  new Close(),\n]\n","import { toAbsoluteCommands, toRelativeCommands } from './command'\nimport type {\n  PathClass,\n  CommandClass,\n  PathAttributes,\n  PointObject,\n  PathObject,\n} from '../types'\n\n/**\n * Cannot support commands that use `M` or` z` more than once.\n *\n * Not support example: `M 0 0 L 1 1 Z M 1 1 L 2 2 Z`.\n */\nexport class Path implements PathClass {\n  private static index = 0\n  private static genIndex = () => (Path.index += 1)\n  private commands: CommandClass[] = []\n  public key: string\n  constructor(public attrs: PathAttributes = {}, _key?: string) {\n    this.key = _key || `p${Path.genIndex()}`\n  }\n\n  get absoluteCommands(): CommandClass[] {\n    return toAbsoluteCommands(this.commands)\n  }\n\n  get relativeCommands(): CommandClass[] {\n    return toRelativeCommands(this.commands)\n  }\n\n  updateCommands(commands: CommandClass[]) {\n    this.commands = toRelativeCommands(commands)\n\n    return this\n  }\n\n  scale(r: number) {\n    this.updateCommands(this.commands.map((c: CommandClass) => c.scale(r)))\n    return this\n  }\n\n  scaleX(r: number) {\n    this.updateCommands(this.commands.map((c: CommandClass) => c.scaleX(r)))\n    return this\n  }\n\n  scaleY(r: number) {\n    this.updateCommands(this.commands.map((c: CommandClass) => c.scaleY(r)))\n    return this\n  }\n\n  addCommand(param: CommandClass | CommandClass[]) {\n    this.updateCommands([...this.commands, param].flat())\n    return this\n  }\n\n  updateCommand(\n    i: number,\n    update: (absoluteCommand: CommandClass) => CommandClass\n  ) {\n    const commands = this.absoluteCommands\n    commands[i] = update(commands[i])\n\n    this.updateCommands(commands)\n    return this\n  }\n\n  deleteCommand(i: number) {\n    this.updateCommands(this.absoluteCommands.filter((_, index) => index !== i))\n    return this\n  }\n\n  getCommandString() {\n    return (\n      this.relativeCommands\n        ?.map((com: CommandClass, _i: number) => com.toString())\n        .join(' ')\n        .trim() || ''\n    )\n  }\n\n  toJson(): PathObject {\n    return {\n      key: this.key,\n      type: 'path',\n      attributes: {\n        ...this.attrs,\n        d: this.getCommandString(),\n      },\n    }\n  }\n\n  setAttributes(attrs: PathAttributes) {\n    this.attrs = attrs\n\n    return this\n  }\n\n  updateAttributes(attrs: PathAttributes) {\n    this.attrs = {\n      ...this.attrs,\n      ...attrs,\n    }\n\n    return this\n  }\n\n  translate(po: PointObject) {\n    this.updateCommands(this.absoluteCommands.map((com) => com.translate(po)))\n\n    return this\n  }\n\n  clone() {\n    return new Path(\n      {\n        ...this.attrs,\n      },\n      this.key\n    ).addCommand(this.commands.map((c) => c.clone()))\n  }\n}\n","import { BezierCurve, closeCommands, createLineCommands } from './convert'\nimport { Path } from '../svg/path'\nimport type {\n  CreateCommand,\n  DrawFactory,\n  PathAttributes,\n  PathClass,\n} from '../types'\n\nexport class BasicDrawFactory implements DrawFactory {\n  constructor(\n    private attrs: PathAttributes,\n    private opts: { curve?: boolean; close?: boolean } = {}\n  ) {\n    this.opts = {\n      curve: true,\n      close: false,\n      ...opts,\n    }\n  }\n\n  createPath(): PathClass {\n    return new Path({\n      ...this.attrs,\n      ...this.curveAttribute,\n    })\n  }\n\n  get createCommand(): CreateCommand {\n    const createCommand = this.opts.curve\n      ? new BezierCurve().create\n      : createLineCommands\n\n    return (po) =>\n      this.opts.close ? closeCommands(createCommand(po)) : createCommand(po)\n  }\n\n  setPathAttributes(attrs: PathAttributes) {\n    this.attrs = attrs\n  }\n\n  updatePathAttributes(attrs: PathAttributes) {\n    this.attrs = {\n      ...this.attrs,\n      ...attrs,\n    }\n  }\n\n  changeCurve(curve: boolean) {\n    this.opts = {\n      ...this.opts,\n      curve,\n    }\n  }\n\n  changeClose(curve: boolean) {\n    this.opts = {\n      ...this.opts,\n      curve,\n    }\n  }\n\n  get curveAttribute() {\n    return {\n      strokeLinecap: this.opts.curve ? 'round' : 'mitter',\n      strokeLinejoin: this.opts.curve ? 'round' : 'square',\n    }\n  }\n}\n","import type { EventPoint } from './types'\n\nexport const SUPPORT_POINTER_EVENT = typeof PointerEvent !== 'undefined'\n\nexport const SUPPORT_ON_TOUCH_START = typeof ontouchstart !== 'undefined'\n\nexport const SUPPORT_EVENT_LISTENER_PASSIVE_OPTION = (() => {\n  try {\n    const check = () => null\n    addEventListener('testPassive', check, { passive: true })\n    removeEventListener('testPassive', check)\n    return true\n  } catch (e) {\n    return false\n  }\n})()\n\nexport const getEventPoint = (\n  ev: MouseEvent | TouchEvent | PointerEvent\n): EventPoint => {\n  if ('touches' in ev) {\n    const touche = ev.touches.length ? ev.touches[0] : ev.changedTouches[0]\n    return {\n      x: touche.clientX,\n      y: touche.clientY,\n      pressure: touche.force,\n    }\n  }\n\n  return {\n    x: ev.clientX,\n    y: ev.clientY,\n    pressure: 'pressure' in ev ? ev.pressure : undefined,\n  }\n}\n","/**\n * ```ts\n * const handleMouseMove = throttle(\n *   (ev) => console.log(ev.target.clientX, ev.target.clientY),\n *   50\n * )\n *\n * window.addEventListener('onmousemove', handleMouseMove)\n * ```\n */\nexport function throttle<T extends (...args: any) => any>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => ReturnType<T> | null {\n  let context: any | null\n  let args: any | null\n  let result: ReturnType<T> | null\n  let timeout: any | null = null\n  let previous = 0\n\n  const later = (): void => {\n    previous = Date.now()\n    timeout = null\n    result = func.apply(context, args)\n    if (!timeout) {\n      context = null\n      args = null\n    }\n  }\n\n  return function wrap(\n    this: typeof func,\n    ...wrapArg: Parameters<T>\n  ): ReturnType<T> | null {\n    const now = Date.now()\n    const remaining = wait - (now - previous)\n    context = this\n    args = wrapArg\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout)\n        timeout = null\n      }\n      previous = now\n      result = func.apply(context, args)\n      if (!timeout) {\n        context = null\n        args = null\n      }\n    } else if (!timeout) {\n      timeout = setTimeout(later, remaining)\n    }\n    return result\n  }\n}\n","import {\n  getEventPoint,\n  SUPPORT_EVENT_LISTENER_PASSIVE_OPTION,\n  SUPPORT_ON_TOUCH_START,\n  SUPPORT_POINTER_EVENT,\n} from '../event'\nimport { throttle } from '../throttle'\nimport type { DrawingClass } from '..'\nimport type {\n  DrawListenerType,\n  DrawEventHandler,\n  ClearListener,\n  EventPoint,\n  DrawEventName,\n} from '../types'\n\nclass OffsetPosition {\n  left: number\n  top: number\n  constructor(private el?: HTMLElement) {\n    const { left, top } = el ? el.getBoundingClientRect() : { left: 0, top: 0 }\n\n    this.left = left\n    this.top = top\n  }\n\n  setElement(el: HTMLElement) {\n    this.el = el\n  }\n\n  setup(): Array<ClearListener> {\n    const el = this.el\n    if (!el) return []\n\n    const setOffsetPosition = () => {\n      const { left, top } = el.getBoundingClientRect()\n      this.left = left\n      this.top = top\n    }\n\n    setOffsetPosition()\n    addEventListener('scroll', setOffsetPosition)\n    el.addEventListener('resize', setOffsetPosition)\n    return [\n      () => {\n        removeEventListener('scroll', setOffsetPosition)\n        el.removeEventListener('resize', setOffsetPosition)\n      },\n    ]\n  }\n}\n\nexport abstract class BaseHandler implements DrawEventHandler {\n  /** Remove EventList */\n  private _clearEventList: Array<ClearListener>\n  /** Offset coordinates */\n  private _offsetPosition: OffsetPosition\n\n  constructor(\n    protected drawing: DrawingClass,\n    protected el?: HTMLElement | undefined\n  ) {\n    // Bind method\n    this.on = this.on.bind(this)\n    this.off = this.off.bind(this)\n    this.setDrawing = this.setDrawing.bind(this)\n\n    // Set offset coordinates\n    this._offsetPosition = new OffsetPosition(el)\n    this._clearEventList = []\n  }\n\n  public get isActive(): boolean {\n    return this._clearEventList.length > 0\n  }\n\n  public off() {\n    this._clearEventList.map((fn) => fn())\n    this._clearEventList = []\n  }\n\n  public on() {\n    this.off()\n\n    this._clearEventList = [\n      ...this._offsetPosition.setup(),\n      ...this.setupListener(),\n    ]\n  }\n\n  public setElement(el: HTMLElement) {\n    this.el = el\n    this._offsetPosition.setElement(el)\n\n    if (this.isActive) this.on()\n  }\n\n  public setDrawing(drawing: DrawingClass) {\n    this.drawing = drawing\n    if (this.isActive) this.on()\n  }\n\n  public getPointObjectFromDrawEvent(\n    ev: MouseEvent | TouchEvent | PointerEvent\n  ): EventPoint {\n    const { x, y, pressure } = getEventPoint(ev)\n\n    return {\n      x: x - this._offsetPosition.left,\n      y: y - this._offsetPosition.top,\n      pressure,\n    }\n  }\n\n  protected abstract setupListener(): Array<ClearListener>\n}\n\nexport class PencilHandler extends BaseHandler {\n  private _drawMoveThrottle: DrawingClass['dot']\n  private delay = 20\n  /** AddEventListener Options */\n  private listenerOption: { passive: boolean } | false\n  constructor(drawing: DrawingClass, el?: HTMLElement) {\n    super(drawing, el)\n\n    // Bind methods\n    this.setDrawing = this.setDrawing.bind(this)\n    this._handleStart = this._handleStart.bind(this)\n    this._handleMove = this._handleMove.bind(this)\n    this._handleEnd = this._handleEnd.bind(this)\n    this._drawMoveThrottle = throttle(this.drawing.dot, this.delay).bind(this)\n\n    this.listenerOption = SUPPORT_EVENT_LISTENER_PASSIVE_OPTION\n      ? { passive: false }\n      : false\n  }\n\n  public changeDelay(delay: number): void {\n    this.delay = delay\n    this._drawMoveThrottle = throttle(this.drawing.dot, this.delay)\n\n    if (this.isActive) this.on()\n  }\n\n  public setDrawing(drawing: DrawingClass) {\n    this.drawing = drawing\n    this._drawMoveThrottle = throttle(this.drawing.dot, this.delay)\n\n    if (this.isActive) this.on()\n  }\n\n  protected setupListener(): Array<ClearListener> {\n    if (SUPPORT_POINTER_EVENT) return this._setupDrawListener('pointer')\n\n    if (SUPPORT_ON_TOUCH_START) return this._setupDrawListener('touch')\n\n    return this._setupDrawListener('mouse')\n  }\n\n  private _handleStart(ev: TouchEvent | MouseEvent | PointerEvent) {\n    ev.preventDefault()\n    this.drawing.start()\n  }\n\n  private _handleEnd(ev: TouchEvent | MouseEvent | PointerEvent) {\n    ev.preventDefault()\n    this.drawing.end()\n  }\n\n  private _handleMove(ev: MouseEvent | PointerEvent | TouchEvent) {\n    ev.preventDefault()\n    this._drawMoveThrottle(this.getPointObjectFromDrawEvent(ev))\n  }\n\n  private _setupDrawListener(type: DrawListenerType): Array<() => void> {\n    const el = this.el\n    if (!el) return []\n\n    const eventMap: Record<\n      DrawListenerType,\n      {\n        start: Array<DrawEventName>\n        move: Array<DrawEventName>\n        end: Array<DrawEventName>\n        flameout: Array<DrawEventName>\n      }\n    > = {\n      pointer: {\n        start: ['pointerdown'],\n        move: ['pointermove'],\n        end: ['pointerleave', 'pointercancel'],\n        flameout: ['pointerup'],\n      },\n      touch: {\n        start: ['touchstart'],\n        move: ['touchmove'],\n        end: ['touchend'],\n        flameout: ['touchcancel'],\n      },\n      mouse: {\n        start: ['mousedown'],\n        move: ['mousemove'],\n        end: ['mouseleave', 'mouseout'],\n        flameout: ['mouseup'],\n      },\n    }\n\n    const { start, move, end, flameout } = eventMap[type]\n\n    const startClear = start.map((evname): ClearListener => {\n      el.addEventListener(evname, this._handleStart, this.listenerOption)\n      return () => el.removeEventListener(evname, this._handleStart)\n    })\n\n    const moveClear = move.map((evname): ClearListener => {\n      el.addEventListener(evname, this._handleMove, this.listenerOption)\n      return () => el.removeEventListener(evname, this._handleMove)\n    })\n\n    const endClear = end.map((evname): ClearListener => {\n      el.addEventListener(evname, this._handleEnd, this.listenerOption)\n      return () => el.removeEventListener(evname, this._handleEnd)\n    })\n\n    const flameoutClear = flameout.map((evname): ClearListener => {\n      addEventListener(evname, this._handleEnd, this.listenerOption)\n      return () => removeEventListener(evname, this._handleEnd)\n    })\n\n    return [...startClear, ...moveClear, ...endClear, ...flameoutClear]\n  }\n}\n\nexport class PenHandler extends BaseHandler {\n  private _editing: boolean\n  constructor(drawing: DrawingClass, el?: HTMLElement) {\n    super(drawing, el)\n    this._editing = false\n    this._handleProt = this._handleProt.bind(this)\n  }\n\n  protected setupListener(): Array<ClearListener> {\n    const clearEvent: ClearListener[] = [...this._setupCancelListener()]\n    if (SUPPORT_POINTER_EVENT)\n      return [...this._setupDrawListener('pointer'), ...clearEvent]\n\n    if (SUPPORT_ON_TOUCH_START)\n      return [...this._setupDrawListener('touch'), ...clearEvent]\n\n    return [...this._setupDrawListener('mouse'), ...clearEvent]\n  }\n\n  private _handleProt(ev: MouseEvent | PointerEvent | TouchEvent) {\n    ev.preventDefault()\n    const isFrameIn = this._isContainElement(ev)\n    if (!this._editing && isFrameIn) {\n      this.drawing.start()\n      this.drawing.dot(this.getPointObjectFromDrawEvent(ev))\n      this._editing = true\n      return\n    }\n\n    if (isFrameIn) {\n      this.drawing.dot(this.getPointObjectFromDrawEvent(ev))\n      return\n    }\n\n    // end\n    this._editing = false\n    this.drawing.end()\n  }\n\n  private _isContainElement(\n    ev: MouseEvent | PointerEvent | TouchEvent\n  ): boolean {\n    if (!this.el) return false\n    return this.el.contains(ev.target as any)\n  }\n\n  private _setupCancelListener() {\n    const stopId = setInterval(() => {\n      if (!document.hasFocus()) {\n        this._editing = false\n        this.drawing.end()\n      }\n    }, 1000)\n    return [() => clearInterval(stopId)]\n  }\n\n  private _setupDrawListener(type: DrawListenerType): Array<ClearListener> {\n    const eventMap: Record<DrawListenerType, DrawEventName> = {\n      touch: 'touchstart',\n      pointer: 'pointerup',\n      mouse: 'mouseup',\n    }\n\n    addEventListener(eventMap[type], this._handleProt)\n    return [\n      () => {\n        removeEventListener(eventMap[type], this._handleProt)\n      },\n    ]\n  }\n}\n","import type { SvgOption, PathClass, SvgClass } from '../types'\n\nexport class Svg implements SvgClass {\n  public paths: PathClass[]\n  public width: number\n  public height: number\n  public background?: string\n\n  constructor({ width, height, background }: SvgOption) {\n    this.paths = []\n    this.width = width\n    this.height = height\n    this.background = background\n  }\n\n  public resize({ width, height }: { width: number; height: number }) {\n    this.scale(width / this.width)\n    this.width = width\n    this.height = height\n  }\n\n  private scale(r: number) {\n    if (r !== 1 && isFinite(r) && r !== 0) {\n      for (let i = 0; i < this.paths.length; i += 1) {\n        this.paths[i].scale(r)\n      }\n    }\n    return this\n  }\n\n  public addPath(pa: PathClass | PathClass[]) {\n    if (Array.isArray(pa)) {\n      this.paths.push(...pa)\n    } else {\n      this.paths.push(pa)\n    }\n    return this\n  }\n\n  public getPath(key: string): PathClass | undefined {\n    return this.paths.find((p) => p.key === key)\n  }\n\n  public updatePath(path: PathClass) {\n    const index = this.paths.findIndex((p) => p.key === path.key)\n    if (index !== -1) {\n      this.paths[index] = path\n    }\n    return this\n  }\n\n  public deletePath(deletePath: PathClass) {\n    this.paths = this.paths.filter((path) => path.key !== deletePath.key)\n    return this\n  }\n\n  public clonePaths() {\n    return this.paths.map((p) => p.clone())\n  }\n\n  public toJson() {\n    return {\n      width: this.width,\n      height: this.height,\n      background: this.background,\n      paths: this.paths.map((p) => p.toJson()),\n    }\n  }\n\n  /**\n   * Copy resized paths.\n   *\n   * @example\n   *\n   * ```ts\n   * const drawSvg = new Svg()\n   * const animateSvg = new Svg().copy(drawSvg)\n   * ```\n   */\n  public copy(svg: SvgClass) {\n    this.paths = svg.clonePaths()\n    if (svg.width && this.width) {\n      this.scale(this.width / svg.width)\n    }\n    return this\n  }\n\n  public clone() {\n    const svg = new Svg({\n      width: this.width,\n      height: this.height,\n      background: this.background,\n    })\n    svg.addPath(this.clonePaths())\n    return svg\n  }\n}\n","import { isCurveCommand } from '../svg/command'\nimport type { PointObject, CommandClass } from '../types'\n\ntype BezierCurvePoint = [PointObject, PointObject, PointObject, PointObject]\n\n/**\n * A cubic Bezier curve is defined by four points. Two are endpoints. (x0,y0) is\n * the origin endpoint. (x3,y3) is the destination endpoint. The points (x1,y1)\n * and (x2,y2) are control points.\n *\n * Two equations define the points on the curve. Both are evaluated for an\n * arbitrary number of values of t between 0 and 1. One equation yields values\n * for x, the other yields values for y. As increasing values for t are supplied\n * to the equations, the point defined by x(t),y(t) moves from the origin to the\n * destination. This is how the equations are defined in Adobe's PostScript references.\n *\n * X(t) = A(x) * pow(t, 3) + B(x) * pow(t, 2) + C(x) * t + x0\n *\n * Y(t) = A(y) * pow(t, 3) + B(y) * pow(t, 2) + c(y) * t + y0\n *\n * This method of definition can be reverse-engineered so that it'll give up the\n * coefficient values based on the points described above:\n *\n * C(x) = 3 (x1 - x0)\n *\n * B(x) = 3 (x2 - x1) - cx\n *\n * A(x) = x3 - x0 - cx - bx\n *\n * C(y) = 3 (y1 - y0)\n *\n * B(y) = 3 (y2 - y1) - cy\n *\n * A(y) = y3 - y0 - cy - by\n *\n * {@link https://www.moshplant.com/direct-or/bezier/math.html}\n */\nexport const calculateCoefficient = ([p0, p1, p2, p3]: BezierCurvePoint): {\n  a: PointObject\n  b: PointObject\n  c: PointObject\n} => {\n  const c = {\n    x: 3 * (p1.x - p0.x),\n    y: 3 * (p1.y - p0.y),\n  }\n\n  const b = {\n    x: 3 * (p2.x - p1.x) - c.x,\n    y: 3 * (p2.y - p1.y) - c.y,\n  }\n\n  const a = {\n    x: p3.x - p0.x - c.x - b.x,\n    y: p3.y - p0.y - c.y - b.y,\n  }\n\n  return { a, b, c }\n}\n\nconst { pow } = Math\n\n/** @todo Compatible for Quadratic and shortcut curve. */\nexport const segmentPoint = (\n  bezierCurve: BezierCurvePoint,\n  range = 10\n): PointObject[] => {\n  const { a, b, c } = calculateCoefficient(bezierCurve)\n  const p = bezierCurve[0]\n\n  const calc = (t: number): PointObject => ({\n    x: a.x * pow(t, 3) + b.x * pow(t, 2) + c.x * t + p.x,\n    y: a.y * pow(t, 3) + b.y * pow(t, 2) + c.y * t + p.y,\n  })\n\n  const step = 1 / range\n  return Array.from({ length: range + 1 }).map((_, i) =>\n    calc(i === 0 ? 0 : i === range ? 1 : i * step)\n  )\n}\n\n/** @todo Compatible for Quadratic and shortcut curve */\nexport const segmentPointsFromCommand = (\n  command: CommandClass,\n  {\n    base,\n    range = 10,\n  }: {\n    base?: PointObject\n    range?: number\n  }\n): PointObject[] => {\n  if (!command.point) return []\n\n  if (isCurveCommand(command)) {\n    const basePoint = base || (command.points[0].toJson() as PointObject)\n    const commandPoints = command.points.map((p) => p.toJson()) as [\n      PointObject,\n      PointObject,\n      PointObject\n    ]\n\n    return segmentPoint([basePoint, ...commandPoints], range)\n  }\n\n  return [command.point.toJson()]\n}\n","import { segmentPointsFromCommand } from './segment'\nimport type { PointObject, FixedType, PathClass } from '../types'\n\nconst fallbackPointObject: PointObject = { x: 0, y: 0 }\n\nexport class BoundingBox {\n  constructor(private paths: PathClass[]) {}\n\n  private get points(): PointObject[] {\n    return this.paths.flatMap((path) => {\n      let prev: PointObject | undefined = undefined\n\n      return path.absoluteCommands.flatMap((command) => {\n        const pts: PointObject[] = segmentPointsFromCommand(command, {\n          base: prev,\n        })\n\n        prev = command.point ? command.point.toJson() : undefined\n\n        return pts\n      })\n    })\n  }\n\n  private get pointsX(): number[] {\n    return this.points.map((point) => point.x)\n  }\n\n  private get pointsY(): number[] {\n    return this.points.map((point) => point.y)\n  }\n\n  get min(): PointObject {\n    if (this.points.length === 0) return fallbackPointObject\n\n    return {\n      x: Math.min(...this.pointsX),\n      y: Math.min(...this.pointsY),\n    }\n  }\n\n  get max(): PointObject {\n    if (this.points.length === 0) return fallbackPointObject\n\n    return {\n      x: Math.max(...this.pointsX),\n      y: Math.max(...this.pointsY),\n    }\n  }\n\n  get width(): number {\n    return this.max.x - this.min.x\n  }\n\n  get height(): number {\n    return this.max.y - this.min.y\n  }\n\n  get vertex(): Record<FixedType, PointObject> {\n    return {\n      ['LeftTop']: { x: this.min.x, y: this.min.y },\n      ['RightTop']: { x: this.max.x, y: this.min.y },\n      ['RightBottom']: { x: this.max.x, y: this.max.y },\n      ['LeftBottom']: { x: this.min.x, y: this.max.y },\n    }\n  }\n\n  public resizeParams(\n    fixedType: FixedType,\n    movePoint: PointObject\n  ): { scale: PointObject; move: PointObject } {\n    const width = this.width\n    const height = this.height\n\n    switch (fixedType) {\n      case 'LeftTop': {\n        const scale = {\n          x: (width - movePoint.x) / width,\n          y: (height - movePoint.y) / height,\n        }\n        const move = {\n          x: -(this.max.x * scale.x - this.max.x),\n          y: -(this.max.y * scale.y - this.max.y),\n        }\n        return { scale, move }\n      }\n      case 'RightTop': {\n        const scale = {\n          x: (width + movePoint.x) / width,\n          y: (height - movePoint.y) / height,\n        }\n        return {\n          scale,\n          move: {\n            x: -(this.min.x * scale.x - this.min.x),\n            y: -(this.max.y * scale.y - this.max.y),\n          },\n        }\n      }\n      case 'LeftBottom': {\n        const scale = {\n          x: (width - movePoint.x) / width,\n          y: (height + movePoint.y) / height,\n        }\n\n        return {\n          scale,\n          move: {\n            x: -(this.max.x * scale.x - this.max.x),\n            y: -(this.min.y * scale.y - this.min.y),\n          },\n        }\n      }\n      case 'RightBottom': {\n        const scale = {\n          x: (width + movePoint.x) / width,\n          y: (height + movePoint.y) / height,\n        }\n        return {\n          scale,\n          move: {\n            x: -(this.min.x * scale.x - this.min.x),\n            y: -(this.min.y * scale.y - this.min.y),\n          },\n        }\n      }\n    }\n  }\n}\n","import type {\n  PointObject,\n  EditVertex,\n  EditPathObject,\n  PathClass,\n} from '../types'\nimport type { PathSelector } from './pathSelector'\n\nconst genOutline = (points: PointObject[]) =>\n  points.reduce(\n    (str, po, i) => (i === 0 ? `M ${po.x} ${po.y}` : str + `L ${po.x} ${po.y}`),\n    ''\n  )\n\nexport class EditPath {\n  constructor(private path: PathClass, private selector: PathSelector) {}\n\n  public toJson(): EditPathObject {\n    return {\n      key: this.path.key,\n      d: this.path.getCommandString(),\n      vertex: this.vertex,\n    }\n  }\n\n  private get vertex(): EditVertex[] {\n    const vertex: EditVertex[] = []\n    const commands = this.path.absoluteCommands\n\n    for (let c = 0; c < commands.length; c += 1) {\n      const curr = commands[c]\n      const next = commands[c + 1]\n\n      const outlinePoints: PointObject[] = [\n        curr.points[1]?.toJson(),\n        curr.points[2]?.toJson(),\n        next?.points[0]?.toJson(),\n      ].filter((p): p is PointObject => !!p)\n\n      const pointIndex = this.selector?.getPointsIndex(this.path.key, c)\n\n      vertex.push({\n        points: curr.points.map((point, pIndex) => ({\n          index: {\n            path: this.path.key,\n            command: c,\n            point: pIndex,\n          },\n          value: point.toJson(),\n          selected: pointIndex?.includes(pIndex) ?? false,\n        })),\n        d: genOutline(outlinePoints),\n      })\n    }\n\n    return vertex\n  }\n}\n","import type {\n  SelectIndex,\n  SelectPathIndex,\n  SelectCommandIndex,\n  SelectPointIndex,\n  PathObject,\n} from '../types'\n\ntype Selecting = Record<PathObject['key'], SelectingCommands>\ntype SelectingCommands = Record<number, SelectingPoints>\ntype SelectingPoints = Array<number>\n\nconst convertSelectingFromIndex = (index: SelectIndex): Selecting => ({\n  [index.path]:\n    typeof index.command === 'number'\n      ? {\n          [index.command]: typeof index.point === 'number' ? [index.point] : [],\n        }\n      : {},\n})\n\nconst isSelectPathIndex = (index: SelectIndex): index is SelectPathIndex =>\n  !!(\n    index.path &&\n    typeof index.command !== 'number' &&\n    typeof index.point !== 'number'\n  )\n\nconst isSelectCommandIndex = (\n  index: SelectIndex\n): index is SelectCommandIndex =>\n  !!(\n    index.path &&\n    typeof index.command === 'number' &&\n    typeof index.point !== 'number'\n  )\n\nconst isSelectPointIndex = (index: SelectIndex): index is SelectPointIndex =>\n  !!(\n    index.path &&\n    typeof index.command === 'number' &&\n    typeof index.point === 'number'\n  )\n\nconst isObjectEmpty = (obj: object): obj is Record<any, never> =>\n  Object.keys(obj).length === 0\n\nexport class PathSelector {\n  private selecting: Selecting = {}\n\n  get selectedPathsOnly(): boolean {\n    return (\n      this.selected &&\n      Object.keys(this.selecting).every(\n        (key: string) =>\n          this.selecting && Object.keys(this.selecting[key]).length === 0\n      )\n    )\n  }\n\n  get selected(): boolean {\n    return !isObjectEmpty(this.selecting)\n  }\n\n  get pathsIndex(): string[] {\n    return Object.keys(this.selecting)\n  }\n\n  getCommandsIndex(pathKey: string): number[] | undefined {\n    const selectingCommands = this.selecting[pathKey]\n\n    return selectingCommands && !isObjectEmpty(selectingCommands)\n      ? Object.keys(selectingCommands).map(Number)\n      : undefined\n  }\n\n  getPointsIndex(pathKey: string, commandKey: number): number[] | undefined {\n    const selectingPoints = this.selecting[pathKey]?.[commandKey]\n\n    return selectingPoints && !isObjectEmpty(selectingPoints)\n      ? selectingPoints\n      : undefined\n  }\n\n  clear() {\n    this.selecting = {}\n  }\n\n  select(index: SelectIndex) {\n    this.selecting = convertSelectingFromIndex(index)\n  }\n\n  /**\n   * Currently, only path indexes are supported.\n   *\n   * @todo Implement so that multiple commands and points can be selected.\n   */\n  selectMerge(index: SelectIndex) {\n    this.selecting = {\n      ...this.selecting,\n      ...convertSelectingFromIndex(index),\n    }\n  }\n\n  unselect(index: SelectIndex) {\n    if (!this.selecting) return\n\n    const { [index.path]: unselectedPath, ...updateSelecting } = this.selecting\n\n    if (!unselectedPath) return\n    if (isSelectPathIndex(index)) {\n      this.selecting = updateSelecting\n      return\n    }\n\n    const { [index.command]: unselectedCommand, ...updateCommandSelecting } =\n      unselectedPath\n\n    if (!unselectedCommand) return\n    if (isSelectCommandIndex(index)) {\n      this.selecting = {\n        ...this.selecting,\n        [index.path]: updateCommandSelecting,\n      }\n      return\n    }\n\n    if (isSelectPointIndex(index)) {\n      this.selecting = {\n        ...this.selecting,\n        [index.path]: {\n          ...this.selecting[index.path],\n          [index.command]: unselectedCommand.filter(\n            (pointIndex) => pointIndex !== index.point\n          ),\n        },\n      }\n    }\n  }\n}\n","import { BoundingBox } from './boundingBox'\nimport { EditPath } from './editPath'\nimport { PathSelector } from './pathSelector'\nimport type {\n  SvgClass,\n  PointObject,\n  PathAttributes,\n  SelectIndex,\n  EditSvgObject,\n  CommandClass,\n  PathClass,\n  PointClass,\n  FixedType,\n} from '../types'\n\nexport class EditSvg {\n  private pathSelector = new PathSelector()\n  constructor(public svg: SvgClass) {}\n\n  /** Return true when some path selected. */\n  get selected() {\n    return this.pathSelector.selected\n  }\n\n  /** Select path index. */\n  select(index: SelectIndex, multipleSelect?: boolean) {\n    if (multipleSelect) {\n      this.pathSelector.selectMerge(index)\n      return\n    }\n    this.pathSelector.select(index)\n  }\n\n  /** Clear selected status. */\n  cancel() {\n    this.pathSelector.clear()\n  }\n\n  /** Change attributes of selected path. */\n  changeAttributes(attrs: PathAttributes) {\n    this.exec((path) => path.updateAttributes(attrs))\n  }\n\n  /** Translate position of selected path. */\n  translate(move: PointObject) {\n    this.exec(\n      (path) => path.translate(move),\n      (command) => command.translate(move),\n      (point) => point.add(move)\n    )\n  }\n\n  /** Scale the selected path. */\n  scale(r: number) {\n    this.exec(\n      (path) => path.scale(r),\n      (command) => command.scale(r),\n      (point) => point.scale(r)\n    )\n  }\n\n  /** Scale the selected path horizontally. */\n  scaleX(r: number) {\n    this.exec(\n      (path) => path.scaleX(r),\n      (command) => command.scaleX(r),\n      (point) => point.scaleX(r)\n    )\n  }\n\n  /** Scale the selected path vertically. */\n  scaleY(r: number) {\n    this.exec(\n      (path) => path.scaleY(r),\n      (command) => command.scaleY(r),\n      (point) => point.scaleY(r)\n    )\n  }\n\n  /** Resize based on the bounding box vertices */\n  resizeBoundingBox(type: FixedType, po: PointObject) {\n    const { move, scale } = new BoundingBox(this.paths).resizeParams(type, po)\n\n    this.exec((path) => path.scaleX(scale.x).scaleY(scale.y).translate(move))\n  }\n\n  /**\n   * Delete the selected path.\n   *\n   * @todo Implements to delete points.\n   */\n  delete() {\n    this.pathSelector.pathsIndex.forEach((pathKey) => {\n      const commandsIndex = this.pathSelector.getCommandsIndex(pathKey)\n\n      const path = this.svg.getPath(pathKey)\n      if (!path) return\n\n      if (!commandsIndex) {\n        this.pathSelector.unselect({ path: pathKey })\n        this.svg.deletePath(path)\n        return\n      }\n\n      commandsIndex.forEach((command) => {\n        this.pathSelector.unselect({ path: pathKey, command })\n        this.svg.updatePath(path.deleteCommand(command))\n      })\n    })\n  }\n\n  /** Clone an EditSvg class object for preview. */\n  preview(): EditSvg {\n    const preview = new EditSvg(this.svg.clone())\n    preview.pathSelector = this.pathSelector\n    return preview\n  }\n\n  /** Return data in json format. */\n  toJson(): EditSvgObject | null {\n    if (!this.pathSelector.selected) return null\n\n    const paths = this.pathSelector.pathsIndex.reduce(\n      (acc: EditSvgObject['paths'], pathKey) => {\n        const path = this.svg.paths.find((path) => path.key === pathKey)\n\n        return path\n          ? {\n              ...acc,\n              [path.key]: new EditPath(\n                path.clone(),\n                this.pathSelector\n              ).toJson(),\n            }\n          : acc\n      },\n      {}\n    )\n\n    const {\n      min: { x, y },\n      width,\n      height,\n      vertex,\n    } = new BoundingBox(this.paths)\n\n    return {\n      paths,\n      boundingBox: {\n        x,\n        y,\n        width,\n        height,\n        vertex,\n        selected: this.pathSelector.selectedPathsOnly,\n      },\n    }\n  }\n\n  private get paths(): PathClass[] {\n    return this.pathSelector.pathsIndex.flatMap((pathKey) => {\n      const path = this.svg.paths.find((path) => path.key === pathKey)\n\n      return path ? path.clone() : []\n    })\n  }\n\n  private exec(\n    pathExec: (path: PathClass) => PathClass,\n    commandExec?: (command: CommandClass) => CommandClass,\n    pointExec?: (point: PointClass) => PointClass\n  ): void {\n    this.pathSelector.pathsIndex.forEach((pathKey) => {\n      const path = this.svg.getPath(pathKey)\n      if (!path) return\n\n      const commandsIndex = this.pathSelector.getCommandsIndex(pathKey)\n      if (!commandsIndex || !commandExec) {\n        this.svg.updatePath(pathExec(path))\n        return\n      }\n\n      commandsIndex.forEach((commandKey) => {\n        const pointsIndex = this.pathSelector.getPointsIndex(\n          pathKey,\n          commandKey\n        )\n        if (!pointsIndex || !pointExec) {\n          this.svg.updatePath(path.updateCommand(commandKey, commandExec))\n          return\n        }\n\n        this.svg.updatePath(\n          path.updateCommand(commandKey, (com) => {\n            const command = com.clone()\n\n            pointsIndex.forEach((pointKey: number) => {\n              command.points[pointKey] = pointExec(command.points[pointKey])\n            })\n\n            return command\n          })\n        )\n      })\n    })\n  }\n}\n","import type {\n  PointObject,\n  PathAttributes,\n  SelectIndex,\n  FixedType,\n} from '../types'\nimport type { EditSvg } from './editSvg'\n\nexport class Editing {\n  constructor(\n    public editSvg: EditSvg,\n    /** Callback function that refreshes the screen. */\n    public updater: (eSvg: EditSvg) => void = () => void 0\n  ) {\n    this.translate = this.translate.bind(this)\n    this.translatePreview = this.translatePreview.bind(this)\n\n    this.resize = this.resize.bind(this)\n    this.resizePreview = this.resizePreview.bind(this)\n  }\n\n  /** Set the callback function to update the screen */\n  setupUpdater(upd: (eSvg: EditSvg) => void) {\n    this.updater = upd\n  }\n\n  /** Clear selected status and update screen. */\n  cancel() {\n    this.editSvg.cancel()\n    this.updater(this.editSvg)\n  }\n\n  /** Select edit path and update screen. */\n  select(index: SelectIndex, multipleSelect?: boolean) {\n    this.editSvg.select(index, multipleSelect)\n    this.updater(this.editSvg)\n  }\n\n  /** Delete path and update screen. */\n  deletePaths() {\n    this.editSvg.delete()\n    this.updater(this.editSvg)\n  }\n\n  /** Change attributes and update screen. */\n  changeAttributes(attrs: PathAttributes) {\n    this.editSvg.changeAttributes(attrs)\n    this.updater(this.editSvg)\n  }\n\n  translatePreview(po: PointObject) {\n    this.translateEditSvg(this.editSvg.preview(), po)\n  }\n\n  translate(po: PointObject) {\n    this.translateEditSvg(this.editSvg, po)\n  }\n\n  private translateEditSvg(editSvg: EditSvg, po: PointObject) {\n    editSvg.translate(po)\n    this.updater(editSvg)\n  }\n\n  resize(fixedType: FixedType, po: PointObject) {\n    this.resizeEditSvg(this.editSvg, fixedType, po)\n  }\n\n  resizePreview(fixedType: FixedType, po: PointObject) {\n    this.resizeEditSvg(this.editSvg.preview(), fixedType, po)\n  }\n\n  private resizeEditSvg(\n    editSvg: EditSvg,\n    fixedType: FixedType,\n    point: PointObject\n  ) {\n    editSvg.resizeBoundingBox(fixedType, point)\n    this.updater(editSvg)\n  }\n}\n","import { getEventPoint } from '../event'\nimport type { PointObject, ResizeBoundingBoxBase } from '../types'\nimport type { Editing } from './editing' // TODO: Replace interface\n\nexport class ResizePathHandler {\n  private resizeBoundingBoxBase: ResizeBoundingBoxBase | null = null\n  constructor(public editing: Editing) {\n    this.handleResizePathEnd = this.handleResizePathEnd.bind(this)\n    this.handleResizePathPreview = this.handleResizePathPreview.bind(this)\n  }\n\n  private getResizeMovePoint(ev: MouseEvent | TouchEvent): PointObject {\n    const po = getEventPoint(ev)\n    return {\n      x: po.x - (this.resizeBoundingBoxBase?.point.x ?? 0),\n      y: po.y - (this.resizeBoundingBoxBase?.point.y ?? 0),\n    }\n  }\n\n  private handleResizePathPreview(ev: MouseEvent | TouchEvent) {\n    if (!this.resizeBoundingBoxBase) return\n\n    this.editing.resizePreview(\n      this.resizeBoundingBoxBase.fixedType,\n      this.getResizeMovePoint(ev)\n    )\n  }\n\n  private handleResizePathEnd(ev: MouseEvent | TouchEvent) {\n    this.end()\n\n    if (!this.resizeBoundingBoxBase) return\n\n    this.editing.resize(\n      this.resizeBoundingBoxBase?.fixedType,\n      this.getResizeMovePoint(ev)\n    )\n\n    this.resizeBoundingBoxBase = null\n  }\n\n  start(base: ResizeBoundingBoxBase) {\n    this.resizeBoundingBoxBase = base\n    addEventListener('mouseup', this.handleResizePathEnd)\n    addEventListener('touchend', this.handleResizePathEnd)\n\n    addEventListener('mousemove', this.handleResizePathPreview)\n    addEventListener('touchmove', this.handleResizePathPreview)\n  }\n\n  end() {\n    removeEventListener('mouseup', this.handleResizePathEnd)\n    removeEventListener('touchend', this.handleResizePathEnd)\n\n    removeEventListener('mousemove', this.handleResizePathPreview)\n    removeEventListener('touchmove', this.handleResizePathPreview)\n  }\n}\n","import { getEventPoint } from '../event'\nimport type { PointObject } from '../types'\nimport type { Editing } from './editing' // todo: Replace interface\n\nexport class TranslatePathHandler {\n  private basePoint: PointObject | null\n\n  constructor(public editing: Editing) {\n    this.basePoint = null\n\n    this.handleTranslateEnd = this.handleTranslateEnd.bind(this)\n    this.handleTranslatePreview = this.handleTranslatePreview.bind(this)\n  }\n\n  private handleTranslatePreview(ev: MouseEvent | TouchEvent) {\n    this.editing.translatePreview(this.getTranslatePoint(ev))\n  }\n\n  private handleTranslateEnd(ev: MouseEvent | TouchEvent) {\n    this.end()\n\n    this.editing.translate(this.getTranslatePoint(ev))\n    this.basePoint = null\n  }\n\n  private getTranslatePoint(ev: MouseEvent | TouchEvent): PointObject {\n    const point = getEventPoint(ev)\n\n    return {\n      x: point.x - (this.basePoint?.x ?? 0),\n      y: point.y - (this.basePoint?.y ?? 0),\n    }\n  }\n\n  start(po: PointObject) {\n    this.basePoint = po\n\n    addEventListener('mouseup', this.handleTranslateEnd)\n    addEventListener('touchend', this.handleTranslateEnd)\n\n    addEventListener('mousemove', this.handleTranslatePreview)\n    addEventListener('touchmove', this.handleTranslatePreview)\n  }\n\n  end() {\n    removeEventListener('mouseup', this.handleTranslateEnd)\n    removeEventListener('touchend', this.handleTranslateEnd)\n\n    removeEventListener('mousemove', this.handleTranslatePreview)\n    removeEventListener('touchmove', this.handleTranslatePreview)\n  }\n}\n","import { camel2kebab } from './utils'\nimport type { PathAttributes, RendererOption, SvgObject } from './types'\n\nconst VERSION = '1.1'\nconst SVG_NS = 'http://www.w3.org/2000/svg'\nconst SVG_XLINK = 'http://www.w3.org/1999/xlink'\ninterface Attrs {\n  [key: string]: string\n}\n\nexport const createSvgElement = (\n  attrs: Attrs,\n  childs: SVGElement[]\n): SVGSVGElement => {\n  const svg = document.createElementNS(SVG_NS, 'svg')\n  svg.setAttributeNS(null, 'version', VERSION)\n  svg.setAttribute('xmlns', SVG_NS)\n  svg.setAttribute('xmlns:xlink', SVG_XLINK)\n  Object.keys(attrs)\n    .sort()\n    .map((key: string) => {\n      svg.setAttribute(key, attrs[key])\n    })\n  childs.map((el: SVGElement) => {\n    svg.appendChild(el)\n  })\n  return svg\n}\n\nexport const createSvgChildElement = <\n  T extends keyof SVGElementTagNameMap = any\n>(\n  elName: T,\n  attrs: Attrs\n): SVGElementTagNameMap[T] => {\n  const path = document.createElementNS(SVG_NS, elName)\n  Object.keys(attrs)\n    .sort()\n    .map((key: string) => {\n      path.setAttribute(key, attrs[key])\n    })\n  return path\n}\n\n/** @deprecated */\nexport const pathObjectToElement = (path: PathAttributes): SVGPathElement => {\n  const kebabAttrs = Object.entries(path).reduce(\n    (acc, [key, val], _i) =>\n      val\n        ? {\n            ...acc,\n            [camel2kebab(key)]: val,\n          }\n        : acc,\n    {}\n  )\n  return createSvgChildElement('path', kebabAttrs)\n}\n\nexport const svgObjectToElement = ({\n  width,\n  height,\n  background,\n  paths,\n}: SvgObject): SVGSVGElement => {\n  const size = { width: String(width), height: String(height) }\n  const bgEl = background\n    ? [createSvgChildElement('rect', { ...size, fill: background })]\n    : []\n  const updateEl = createSvgElement(size, [\n    ...bgEl,\n    ...paths.map(({ attributes }) => pathObjectToElement(attributes)),\n  ])\n  return updateEl\n}\n\nexport class Renderer {\n  constructor(public el: HTMLElement, { background }: RendererOption = {}) {\n    /** Setup parameter */\n    const { width, height } = this.el.getBoundingClientRect()\n    this.el.appendChild(\n      svgObjectToElement({ background, width, height, paths: [] })\n    )\n\n    this.update = this.update.bind(this)\n  }\n  /** Update render */\n  public update({ svg }: { svg: SvgObject }): void {\n    this.el.replaceChild(svgObjectToElement(svg), this.el.childNodes[0])\n  }\n}\n","export const mimeTypeMap = {\n  png: 'image/png',\n  jpg: 'image/jpeg',\n  svg: 'image/svg+xml',\n} as const\n\nconst base64ToBlob = (\n  data: string,\n  type: typeof mimeTypeMap[keyof typeof mimeTypeMap]\n) => {\n  const bin = Buffer.from(data.replace(/^.*,/, '')).toString()\n  const buffer = new Uint8Array(bin.length)\n\n  for (let i = 0; i < bin.length; i += 1) {\n    buffer[i] = bin.charCodeAt(i)\n  }\n\n  return new Blob([buffer.buffer], {\n    type,\n  })\n}\n\nexport const downloadBlob = ({\n  data,\n  extension,\n  filename,\n}: {\n  data: string\n  extension: keyof typeof mimeTypeMap\n  filename: string\n}): void => {\n  const blob = base64ToBlob(data, mimeTypeMap[extension])\n  // IE\n  if ((navigator as any).msSaveBlob) {\n    ;(navigator as any).msSaveBlob(blob, filename)\n    return\n  }\n\n  // Firefox, Chrome, Safari\n  if (URL?.createObjectURL) {\n    const a = document.createElement('a')\n    a.download = filename\n    a.href = URL.createObjectURL(blob)\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    return\n  }\n\n  // Other\n  open(data, '_blank')\n}\n\nexport class Download {\n  private download: typeof downloadBlob\n  constructor(private el: SVGSVGElement, _download?: typeof downloadBlob) {\n    this.download = _download || downloadBlob\n  }\n\n  public svg(filename: string) {\n    this.download({\n      data: this.toBase64(),\n      extension: 'svg',\n      filename,\n    })\n  }\n\n  public png(filename: string) {\n    this.renderCanvas({\n      filename,\n      extension: 'png',\n    })\n  }\n\n  public jpg(filename: string) {\n    this.renderCanvas({\n      filename,\n      extension: 'png',\n    })\n  }\n\n  public toBase64() {\n    return `data:image/svg+xml;base64,${Buffer.from(this.el.outerHTML).toString(\n      'base64'\n    )}`\n  }\n\n  private renderCanvas({\n    filename,\n    extension,\n  }: {\n    filename: string\n    extension: 'png' | 'jpg'\n  }) {\n    const img = new Image()\n    const renderCanvas = () => {\n      const canvas = document.createElement('canvas')\n\n      canvas.setAttribute('width', String(this.el.width.animVal.value))\n      canvas.setAttribute('height', String(this.el.height.animVal.value))\n      const ctx = canvas.getContext('2d')\n      if (!ctx) return\n\n      ctx.drawImage(img, 0, 0)\n      this.download({\n        data: canvas.toDataURL(mimeTypeMap[extension]),\n        extension,\n        filename,\n      })\n    }\n    img.addEventListener('load', renderCanvas, false)\n    img.src = this.toBase64()\n  }\n}\n","import type { ResizeEventHandler, ResizeCallback } from './types'\n\nconst SUPPORT_RESIZE_OBSERVER = typeof ResizeObserver !== 'undefined'\n\n/**\n * ### Resize SVG to match element resizing\n *\n * ```ts\n * const svg = new Svg()\n * const resizeHandler = new ResizeHandler(\n *   document.getElementById('draw-area')\n * )\n *\n * resizeHandler.setHandler(({ width, height }) =>\n *   svg.resize({ width, height })\n * )\n * resizeHandler.on()\n * ```\n */\nexport class ResizeHandler implements ResizeEventHandler {\n  /** Remove EventList */\n  private _clearEventList: Array<() => void>\n  private resizeCallback: ResizeCallback\n  private width = 0\n  private height = 0\n  private threshold = 1\n  constructor(private el: HTMLElement | null = null) {\n    this.el = el\n    this.resizeCallback = () => void 0\n    this._clearEventList = []\n  }\n\n  public get active(): boolean {\n    return this._clearEventList.length > 0\n  }\n\n  public off() {\n    this._clearEventList.map((fn) => fn())\n    this._clearEventList = []\n  }\n\n  public on() {\n    this.off()\n    this._setupListener()\n  }\n\n  public setElement(el: HTMLElement) {\n    this.el = el\n    if (this.active) this.on()\n    return this\n  }\n\n  public setHandler(resizeCallback: ResizeCallback) {\n    this.resizeCallback = resizeCallback\n  }\n\n  private resize({ width, height }: { width: number; height: number }) {\n    this.width = width\n    this.height = height\n    this.resizeCallback({ width, height })\n  }\n\n  private handleResize() {\n    if (!this.el) return\n    const { width, height } = this.el.getBoundingClientRect()\n\n    if (\n      Math.abs(this.width - width) < this.threshold &&\n      Math.abs(this.height - height) < this.threshold\n    ) {\n      return\n    }\n\n    this.resize({ width, height })\n  }\n\n  private _setupListener(): void {\n    if (!this.el) return\n\n    // Initialize size\n    this.handleResize()\n\n    // ResizeObserver\n    // Use `getBoundingClientRect` because it is not fit when the size is obtained from `contentRect` of resize observe entry.\n    if (SUPPORT_RESIZE_OBSERVER) {\n      const resizeObserver = new ResizeObserver(() => this.handleResize())\n      resizeObserver.observe(this.el)\n\n      this._clearEventList.push(() => resizeObserver.disconnect())\n      return\n    }\n\n    // Fallback resize listener\n    addEventListener('resize', this.handleResize)\n    this._clearEventList.push(() =>\n      removeEventListener('resize', this.handleResize)\n    )\n  }\n}\n","import { createCommand } from './svg/command'\nimport { Path } from './svg/path'\nimport { Svg } from './svg/svg'\nimport { kebab2camel } from './utils'\nimport type { PathClass, CommandClass, CommandType, SvgClass } from './types'\n\nexport const parseSVGString = (svgStr: string): SvgClass => {\n  const svgEl: SVGSVGElement | null = new DOMParser()\n    .parseFromString(svgStr, 'image/svg+xml')\n    .querySelector('svg')\n\n  return svgEl ? parseSVGElement(svgEl) : new Svg({ width: 0, height: 0 })\n}\n\nexport const parseSVGElement = (svgEl: SVGSVGElement): SvgClass => {\n  const width = Number(svgEl.getAttribute('width'))\n  const height = Number(svgEl.getAttribute('height'))\n\n  const svg = new Svg({ width, height })\n  svgEl.querySelectorAll('path').forEach((pEl) => {\n    svg.addPath(parsePathElement(pEl))\n  })\n\n  return svg\n}\n\nexport const parsePathElement = (pathEl: SVGPathElement): PathClass => {\n  const path = new Path()\n  for (let i = 0; i < pathEl.attributes.length; i += 1) {\n    const attr: Attr | null = pathEl.attributes.item(i)\n    if (!attr || !attr.value) continue\n    if (attr.name === 'd') {\n      path.addCommand(parseCommandString(attr.value))\n      continue\n    }\n\n    path.updateAttributes({\n      [kebab2camel(attr.name)]: attr.value,\n    })\n  }\n\n  return path\n}\n\nexport const parseCommandString = (d: string): CommandClass[] => {\n  const commandsTypes = 'mlsqlhvcsqaz'\n  // expect ['M 0 0 ', 'M', ' 0 0 ', ...]\n  const regexp = new RegExp(`([${commandsTypes}])([^${commandsTypes}]*)`, 'gi')\n\n  return Array.from(d.matchAll(regexp) || []).reduce(\n    (acc: CommandClass<any>[], match: RegExpMatchArray, i) => {\n      const values: number[] =\n        match[2]\n          ?.split(/[,\\s]/)\n          ?.reduce(\n            (acc: number[], str) => (str === '' ? acc : [...acc, +str]),\n            []\n          ) || []\n      return [...acc, createCommand(match[1] as CommandType, values)]\n    },\n    []\n  )\n}\n","import { Drawing } from './drawing/drawing'\nimport { PencilHandler } from './drawing/eventHandler'\nimport { BasicDrawFactory } from './drawing/factory'\nimport { Renderer } from './renderer'\nimport { Svg } from './svg/svg'\nimport { isAlmostSameNumber } from './utils'\nimport type {\n  DrawingOption,\n  DrawEventHandler,\n  SvgClass,\n  DrawingClass,\n  PathClass,\n  ResizeCallback,\n  SvgObject,\n  EventPoint,\n} from './types'\n\n/**\n * ### Setup SvgDrawing\n *\n * ```ts\n * import { SvgDrawing } from '@svg-drawing/core'\n *\n * const el = document.getElementById('draw-area')\n * new SvgDrawing(el)\n * ```\n *\n * ### Set draw options.\n *\n * ```ts\n * // It is default value\n * const options = {\n *   penColor: '#000',\n *   penWidth: 1,\n *   curve: true,\n *   close: false,\n *   delay: 0,\n *   fill: 'none',\n *   background: undefined,\n * }\n *\n * new SvgDrawing(el, options)\n * ```\n */\nexport class SvgDrawing {\n  private svg: SvgClass\n  private drawing: DrawingClass\n  private factory: BasicDrawFactory\n  private handler: DrawEventHandler\n  private renderer: Renderer\n  constructor(\n    el: HTMLElement,\n    {\n      curve = true,\n      close = false,\n      delay = 0,\n      penColor,\n      penWidth,\n      fill,\n      background,\n    }: DrawingOption = {}\n  ) {\n    const { width, height } = el.getBoundingClientRect()\n\n    this.renderer = new Renderer(el, { background })\n\n    this.update = this.update.bind(this)\n\n    this.svg = new Svg({ width, height, background })\n\n    this.factory = new BasicDrawFactory(\n      {\n        stroke: penColor ?? '#000',\n        strokeWidth: penWidth || penWidth === 0 ? String(penWidth) : '1',\n        fill: fill ?? 'none',\n      },\n      { curve, close }\n    )\n\n    this.drawing = new Drawing(this.svg, this.factory, this.update)\n\n    const pencilHandler = new PencilHandler(this.drawing, el)\n    this.handler = pencilHandler\n    pencilHandler.changeDelay(delay)\n    this.handler.on()\n  }\n\n  public drawStart(): void {\n    this.drawing.start()\n  }\n\n  public drawMove(po: EventPoint): void {\n    this.drawing.dot(po)\n  }\n\n  public drawEnd(): void {\n    this.drawing.end()\n  }\n\n  public toJson(): SvgObject {\n    return this.svg.toJson()\n  }\n\n  public changeCurve(curve: boolean): void {\n    this.factory.changeCurve(curve)\n  }\n\n  public changeClose(close: boolean): void {\n    this.factory.changeClose(close)\n  }\n\n  public clear(): PathClass[] {\n    const paths = this.svg.paths\n    this.svg.paths = []\n    this.update()\n    return paths\n  }\n\n  public undo(): PathClass | undefined {\n    const path = this.svg.paths.pop()\n    this.update()\n    return path\n  }\n\n  private update(): void {\n    this.renderer.update({ svg: this.svg.toJson() })\n  }\n\n  public resize({ width, height }: Parameters<ResizeCallback>[0]) {\n    if (isAlmostSameNumber(this.svg.width, width)) return\n\n    this.svg.resize({ width, height })\n    this.update()\n  }\n}\n","import { roundUp, camel2kebab } from '../utils'\nimport type {\n  PathClass,\n  AnimationOption,\n  FrameAnimation,\n  AnimateAttribute,\n  AnimationObject,\n} from '../types'\n\nconst createAnimateAttributeValues = (\n  animationPaths: (PathClass | undefined)[],\n  attributeName: string,\n  defaultValue: string\n): string[] =>\n  animationPaths.map((p) => p?.attrs[attributeName] || defaultValue)\n\nconst createAnimateCommandValues = (\n  animationPaths: (PathClass | undefined)[],\n  originPath: PathClass\n): string[] =>\n  animationPaths.map(\n    (p) => p?.getCommandString() || originPath.relativeCommands[0].toString()\n  )\n\nexport class Animation {\n  public ms: number\n  public paths: PathClass[]\n  public generator?: Generator<PathClass[], void, unknown>\n  private _frame: FrameAnimation | null = null\n  private _repeatCount?: number\n  constructor({ ms }: AnimationOption = { ms: 60 }) {\n    this.ms = ms\n    this.paths = []\n  }\n\n  /**\n   * `frame` is the number of frames to animate `repeat` is related for\n   * repeatCount of animate element attribute.\n   *\n   * @param {FramaAnimation} fn\n   * @param {{ frame?: number; repeat?: number }} opts\n   */\n  public setup(\n    frame: FrameAnimation,\n    { repeatCount, ms }: { repeatCount?: number; ms?: number } = {}\n  ): void {\n    this._frame = frame\n\n    this._repeatCount = repeatCount || undefined\n    if (ms) this.ms = ms\n\n    this.generator = this.setupGenerator()\n  }\n\n  public getFramePaths(key: number): PathClass[] {\n    const paths = this.paths.map((p) => p.clone())\n\n    if (!paths.length || !this._frame) return paths\n\n    return this._frame.animation(paths, key)\n  }\n\n  public restorePaths() {\n    return this.paths.map((p) => p.clone())\n  }\n\n  private *setupGenerator() {\n    let loopId = 0\n    let repeatCount = 0\n    if (!this._frame) return\n\n    while (!this._repeatCount || repeatCount < this._repeatCount) {\n      if (loopId > this._frame.loops) {\n        repeatCount += 1\n        loopId = 0\n      } else {\n        loopId += 1\n      }\n\n      yield this.getFramePaths(loopId)\n    }\n  }\n\n  public initialize(paths: PathClass[]) {\n    this.paths = paths.map((p) => p.clone())\n    this.generator = this.setupGenerator()\n    return this\n  }\n\n  public toJson(): AnimationObject {\n    if (!this._frame) return {}\n\n    const loop = this._frame.loops\n    const frameLoop = Array(this._frame.loops).fill(null)\n\n    const animPathsList: PathClass[][] = frameLoop.map((_: any, i: number) =>\n      this.getFramePaths(i)\n    )\n\n    const baseAttrs = {\n      repeatCount: `${this._repeatCount || `indefinite`}`,\n      dur: loop * (this.ms > 0 ? this.ms : 1) + 'ms',\n      keyTimes: frameLoop.reduce(\n        (acc: string, _, i) => acc + ';' + roundUp((i + 1) * (1 / loop), 4),\n        '0'\n      ),\n    }\n\n    return this.paths.reduce((acc: AnimationObject, basePath) => {\n      const { key, attributes } = basePath.toJson()\n\n      const animPaths = animPathsList.map((ap) =>\n        ap.find((p) => p.key === basePath.key)\n      )\n\n      // TODO: Check attribute key and value.\n      const animateAttributesList: AnimateAttribute[] = Object.keys(attributes)\n        .sort()\n        .reduce((animateAttrs: AnimateAttribute[], attributeName: string) => {\n          const defaultValue = attributes[attributeName]\n          if (!defaultValue) return animateAttrs\n\n          const values =\n            attributeName === 'd'\n              ? createAnimateCommandValues(animPaths, basePath)\n              : createAnimateAttributeValues(\n                  animPaths,\n                  attributeName,\n                  defaultValue\n                )\n          if (values.every((v) => v === defaultValue)) return animateAttrs\n\n          return [\n            ...animateAttrs,\n            {\n              ...baseAttrs,\n              attributeName: camel2kebab(attributeName),\n              values: [...values, defaultValue].join(';'),\n            },\n          ]\n        }, [])\n\n      return {\n        ...acc,\n        [key]: animateAttributesList.map((animateAttributes) => ({\n          type: 'animate',\n          attributes: animateAttributes,\n        })),\n      }\n    }, {})\n  }\n}\n","import { Animation } from './animation/animation'\nimport {\n  Renderer,\n  createSvgChildElement,\n  createSvgElement,\n  pathObjectToElement,\n} from './renderer'\nimport { Svg } from './svg/svg'\nimport type {\n  AnimationOption,\n  RendererOption,\n  ResizeCallback,\n  SvgClass,\n} from './types'\n\nexport class SvgAnimation {\n  private _stopId?: number\n  constructor(\n    public svg: SvgClass,\n    public animation: Animation,\n    private update: (svg: SvgClass) => void\n  ) {\n    this.resize = this.resize.bind(this)\n  }\n\n  public stop(): void {\n    if (!this._stopId) return\n\n    cancelAnimationFrame(this._stopId)\n    this.restore()\n  }\n\n  public restore(): void {\n    this.svg.paths = this.animation.restorePaths()\n    this.update(this.svg)\n  }\n\n  public start(): void {\n    // If do not this first, this cannot get the number of frames well.\n    this.stop()\n\n    this._setupAnimation()\n    this._startAnimation()\n  }\n\n  private _setupAnimation() {\n    this.animation.initialize(this.svg.paths)\n  }\n\n  private _updateFrame() {\n    if (!this.animation.generator) return\n\n    const result = this.animation.generator.next()\n    if (result.done) {\n      this.stop()\n      return\n    }\n\n    this.svg.paths = result.value\n    this.update(this.svg)\n  }\n\n  private _startAnimation(): void {\n    let start = 0\n\n    const frame: FrameRequestCallback = (timestamp: number) => {\n      if (timestamp - start > this.animation.ms) {\n        start = timestamp\n        this._updateFrame()\n      }\n\n      this._stopId = requestAnimationFrame(frame)\n    }\n\n    this._stopId = requestAnimationFrame(frame)\n  }\n\n  public toElement() {\n    const sizeAttributes = {\n      width: String(this.svg.width),\n      height: String(this.svg.height),\n    }\n\n    const animationJson = this.animation.toJson()\n\n    const pathEls = this.animation.paths.map((path) => {\n      const { key, attributes } = path.toJson()\n      const pathEl = pathObjectToElement(attributes)\n\n      animationJson?.[key]?.map(({ type, attributes }) => {\n        pathEl.appendChild(createSvgChildElement(type, attributes))\n      })\n\n      return pathEl\n    })\n\n    const childEls: SVGElement[] = this.svg.background\n      ? [\n          createSvgChildElement('rect', {\n            ...sizeAttributes,\n            fill: this.svg.background,\n          }),\n          ...pathEls,\n        ]\n      : pathEls\n\n    return createSvgElement(sizeAttributes, childEls)\n  }\n\n  public resize({ width, height }: Parameters<ResizeCallback>[0]): void {\n    this.stop()\n    this.svg.resize({ width, height })\n    this.animation.initialize(this.svg.paths)\n    this.start()\n  }\n\n  public static init(\n    el: HTMLElement,\n    { ms, background }: AnimationOption & RendererOption = { ms: 60 }\n  ): SvgAnimation {\n    const { width, height } = el.getBoundingClientRect()\n    return new SvgAnimation(\n      new Svg({ width, height }),\n      new Animation({ ms }),\n      (svg) => new Renderer(el, { background }).update({ svg: svg.toJson() })\n    )\n  }\n}\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Drawing","constructor","svg","pathFactory","update","this","_drawPath","_drawPoints","start","bind","dot","end","createPath","addPath","po","push","updateCommands","createCommand","roundNumber","num","Math","round","Point","x","y","_x","_y","scale","r","scaleX","scaleY","add","p","sub","clone","toJson","static","_ref","angle","theta","PI","cos","sin","camel2kebab","str","replace","toLowerCase","roundUp","digits","toFixed","OtherCommand","type","values","points","reduce","acc","_","i","point","toString","map","v","join","res","upd","slice","translate","Types","a","t","some","arg","H","h","V","A","RelativeMove","Move","RelativeLine","Line","RelativeCurve","Curve","ShortcutCurve","RelativeShortcutCurve","QuadraticCurve","RelativeQuadraticCurve","Close","_p","_r","isAbsoluteCommand","command","includes","isRelativeCommand","isCurveCommand","isOtherCommand","toRelativeCommand","basePoint","Error","toAbsoluteCommand","toRelativeCommands","commands","length","notAbsoluteCommand","undefined","toAbsoluteCommands","notRelativeCommand","Vector","rotate","sqrt","pow","atan2","createLineCommands","BezierCurve","_temp","ratio","create","genCommand","p1","p2","p3","p4","fromPoint","vPrev","fromVector","vNext","cPrev","cNext","closeCommands","Path","attrs","_key","genIndex","absoluteCommands","relativeCommands","c","addCommand","param","flat","updateCommand","deleteCommand","filter","index","getCommandString","_this$relativeCommand","com","_i","trim","attributes","d","setAttributes","updateAttributes","BasicDrawFactory","opts","curve","close","curveAttribute","setPathAttributes","updatePathAttributes","changeCurve","changeClose","strokeLinecap","strokeLinejoin","SUPPORT_POINTER_EVENT","PointerEvent","SUPPORT_ON_TOUCH_START","ontouchstart","SUPPORT_EVENT_LISTENER_PASSIVE_OPTION","check","addEventListener","passive","removeEventListener","e","getEventPoint","ev","touche","touches","changedTouches","clientX","clientY","pressure","force","throttle","func","wait","context","args","result","timeout","previous","later","Date","now","apply","remaining","_len","arguments","wrapArg","Array","clearTimeout","setTimeout","OffsetPosition","el","left","top","getBoundingClientRect","setElement","setup","setOffsetPosition","BaseHandler","drawing","on","off","setDrawing","_offsetPosition","_clearEventList","isActive","fn","setupListener","getPointObjectFromDrawEvent","PencilHandler","super","_handleStart","_handleMove","_handleEnd","_drawMoveThrottle","delay","listenerOption","changeDelay","_setupDrawListener","preventDefault","move","flameout","pointer","touch","mouse","evname","PenHandler","_editing","_handleProt","clearEvent","_setupCancelListener","isFrameIn","_isContainElement","contains","target","stopId","setInterval","document","hasFocus","clearInterval","eventMap","Svg","width","height","background","paths","resize","_ref2","isFinite","pa","isArray","getPath","find","updatePath","path","findIndex","deletePath","clonePaths","copy","segmentPoint","bezierCurve","range","b","p0","calculateCoefficient","step","from","calc","fallbackPointObject","BoundingBox","flatMap","prev","pts","base","commandPoints","segmentPointsFromCommand","pointsX","pointsY","min","max","vertex","LeftTop","RightTop","RightBottom","LeftBottom","resizeParams","fixedType","movePoint","EditPath","selector","_curr$points$","_curr$points$2","_next$points$","_this$selector","curr","next","outlinePoints","pointIndex","getPointsIndex","pIndex","selected","convertSelectingFromIndex","isObjectEmpty","keys","PathSelector","selectedPathsOnly","selecting","every","pathsIndex","getCommandsIndex","pathKey","selectingCommands","Number","commandKey","_this$selecting$pathK","selectingPoints","clear","select","selectMerge","unselect","unselectedPath","updateSelecting","isSelectPathIndex","unselectedCommand","updateCommandSelecting","isSelectCommandIndex","isSelectPointIndex","EditSvg","pathSelector","multipleSelect","cancel","changeAttributes","exec","resizeBoundingBox","delete","forEach","commandsIndex","preview","boundingBox","pathExec","commandExec","pointExec","pointsIndex","pointKey","Editing","editSvg","updater","translatePreview","resizePreview","setupUpdater","deletePaths","translateEditSvg","resizeEditSvg","ResizePathHandler","editing","handleResizePathEnd","handleResizePathPreview","getResizeMovePoint","_this$resizeBoundingB","_this$resizeBoundingB2","resizeBoundingBoxBase","_this$resizeBoundingB3","TranslatePathHandler","handleTranslateEnd","handleTranslatePreview","getTranslatePoint","_this$basePoint","_this$basePoint2","SVG_NS","createSvgElement","childs","createElementNS","setAttributeNS","setAttribute","sort","appendChild","createSvgChildElement","elName","pathObjectToElement","kebabAttrs","entries","val","svgObjectToElement","size","String","bgEl","fill","_ref3","Renderer","_ref4","replaceChild","childNodes","mimeTypeMap","png","jpg","downloadBlob","_URL","data","extension","filename","blob","bin","Buffer","buffer","Uint8Array","charCodeAt","Blob","base64ToBlob","navigator","msSaveBlob","URL","createObjectURL","createElement","download","href","body","click","removeChild","open","Download","_download","toBase64","renderCanvas","outerHTML","img","Image","canvas","animVal","ctx","getContext","drawImage","toDataURL","src","SUPPORT_RESIZE_OBSERVER","ResizeObserver","ResizeHandler","resizeCallback","active","_setupListener","setHandler","handleResize","abs","threshold","resizeObserver","observe","disconnect","parseSVGString","svgStr","svgEl","DOMParser","parseFromString","querySelector","parseSVGElement","getAttribute","querySelectorAll","pEl","parsePathElement","pathEl","attr","item","name","toUpperCase","parseCommandString","regexp","RegExp","matchAll","match","_match$","_match$$split","split","SvgDrawing","penColor","penWidth","renderer","factory","stroke","strokeWidth","pencilHandler","handler","drawStart","drawMove","drawEnd","undo","pop","trunc","Animation","ms","frame","_temp2","repeatCount","_frame","_repeatCount","generator","setupGenerator","getFramePaths","animation","restorePaths","loopId","loops","initialize","loop","frameLoop","animPathsList","baseAttrs","dur","keyTimes","basePath","animPaths","ap","animateAttrs","attributeName","defaultValue","originPath","animationPaths","createAnimateAttributeValues","animateAttributes","SvgAnimation","stop","_stopId","cancelAnimationFrame","restore","_setupAnimation","_startAnimation","_updateFrame","done","timestamp","requestAnimationFrame","toElement","sizeAttributes","animationJson","pathEls","_animationJson$key","childEls"],"mappings":"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"}