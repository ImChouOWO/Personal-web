import type { PathAttributes, RendererOption, SvgObject } from './types';
interface Attrs {
    [key: string]: string;
}
export declare const createSvgElement: (attrs: Attrs, childs: SVGElement[]) => SVGSVGElement;
export declare const createSvgChildElement: <T extends keyof SVGElementTagNameMap = any>(elName: T, attrs: Attrs) => SVGElementTagNameMap[T];
/** @deprecated */
export declare const pathObjectToElement: (path: PathAttributes) => SVGPathElement;
export declare const svgObjectToElement: ({ width, height, background, paths, }: SvgObject) => SVGSVGElement;
export declare class Renderer {
    el: HTMLElement;
    constructor(el: HTMLElement, { background }?: RendererOption);
    /** Update render */
    update({ svg }: {
        svg: SvgObject;
    }): void;
}
export {};
