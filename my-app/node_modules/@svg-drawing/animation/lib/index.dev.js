/*
 * @svg-drawing/animation v5.0.1-beta.0 
 * 
 * Copyright (C) Kazuto Kamei.
 * This source code is licensed under the MIT license.
 */
import{Point as t}from"@svg-drawing/core";class n{constructor(t){var n,i,s;void 0===t&&(t=5),this.range=t,s=10,(i="loops")in(n=this)?Object.defineProperty(n,i,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[i]=s,this.animation=this.animation.bind(this)}randomNumber(){return Math.random()*this.range-this.range/2}animation(n){for(let i=0;i<n.length;i+=1)n[i].updateCommands(n[i].absoluteCommands.map((n=>{const i=n.clone();return i.points=n.points.map((n=>n.add(new t(this.randomNumber(),this.randomNumber())))),i})));return n}}class i{constructor(t){this.attributesList=t,this.animation=this.animation.bind(this)}get loops(){return this.attributesList.length}animation(t,n){const i=this.attributesList[n];if(!i)return t;for(let n=0;n<t.length;n+=1)t[n].updateAttributes(i);return t}}class s{constructor(t){this.paths=t,this.animation=this.animation.bind(this)}get loops(){return this.paths.reduce(((t,n)=>t+n.absoluteCommands.length),0)}animation(t,n){let i=n;const s=[];for(let n=0;n<t.length;n+=1){const a=t[n],e=a.absoluteCommands.length;if(a.updateCommands(a.absoluteCommands.slice(0,i)),s.push(a),i-=e,i<0)break}return s}}export{i as AttributeFrame,s as DrawFrame,n as ShakeFrame};
//# sourceMappingURL=index.dev.js.map
